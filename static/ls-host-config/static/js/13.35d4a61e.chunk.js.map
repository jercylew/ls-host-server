{"version":3,"sources":["lib/AxiosClient.js","app/view/ElectricMonitorConfig.js"],"names":["AxiosClient","axios","create","baseURL","timeout","headers","ElectricMonitorConfig","_useState","useState","_useState2","_slicedToArray","warningDialogVisible","setWarningDialogVisible","_useState3","_useState4","alertVisible","setAlertVisible","_useState5","_useState6","toastVisible","setToastVisible","_useState7","_useState8","toastMessage","setToastMessage","_useState9","_useState10","currentIndex","setCurrentIndex","_useState11","_useState12","newChName","setNewChName","_useState13","_useState14","alertMessage","setAlertMessage","_useState15","_useState16","operatingSucceed","setOperatingSucceed","closeWarningDialog","refreshChannelList","get","then","res","respData","data","is_succeed","setChannelSettings","channels","catch","err","console","log","showAlertFailed","message","addNewChannel","chName","chPayload","ch_name","ch_temp_read_address","ch_leakcurrent_read_address","ch_current_read_address","current_allowed_range_max","current_info_trigger_range","current_info_trigger_duration","current_alarm_trigger_range","current_alarm_trigger_duration","temp_info_trigger_range","temp_info_trigger_duration","temp_alarm_trigger_range","temp_alarm_trigger_duration","leakcurrent_info_trigger_range","leakcurrent_info_trigger_duration","leakcurrent_alarm_trigger_range","leakcurrent_alarm_trigger_duration","post","resp","concat","error","_useState17","_useState18","channelSettings","_useState19","_useState20","advancedSettings","setAdvancedSettings","handleUpdateChStringSetting","e","index","field","newSettings","_toConsumableArray","slice","_objectSpread","_defineProperty","target","value","handleUpdateChIntSetting","parseInt","useEffect","bsCustomFileInput","init","React","createElement","Fragment","Alert","show","variant","onClose","dismissible","Heading","style","display","alignItems","justifyContent","Toast","position","zIndex","width","delay","autohide","Header","className","Body","htmlFor","Form","Control","type","id","onChange","event","placeholder","onClick","height","overflowY","length","map","chSetting","key","cursor","Group","readOnly","as","p","selected","updated","backgroundColor","put","updateChannel","Modal","onHide","closeButton","Title","Footer","Button","delete"],"mappings":"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","file":"static/js/13.35d4a61e.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst AxiosClient = axios.create({\n    baseURL: 'http://localhost/api/',   // Local debug\n    // baseURL: '/api/',                // Product\n    timeout: 10000,\n    headers: { 'ls-token': '1234567890abcdef' }\n});\n\n//- or after instance has been created\n// AxiosClient.defaults.headers.post['header1'] = 'value'\n\n//- or before a request is made\n// using Interceptors\n// AxiosClient.interceptors.request.use(config => {\n//   config.headers.post['header1'] = 'value';\n//   return config;\n// });\n\nexport default AxiosClient;","import React, { useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Toast from 'react-bootstrap/Toast';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport AxiosClient from '../../lib/AxiosClient';\n\nexport default function ElectricMonitorConfig() {\n    const [warningDialogVisible, setWarningDialogVisible] = useState(false);\n    const [alertVisible, setAlertVisible] = useState(false);\n    const [toastVisible, setToastVisible] = useState(false);\n    const [toastMessage, setToastMessage] = useState('');\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [newChName, setNewChName] = useState('');\n    const [alertMessage, setAlertMessage] = useState('');\n    const [operatingSucceed, setOperatingSucceed] = useState(true);\n\n    const closeWarningDialog = () => setWarningDialogVisible(false);\n    const showWarningDialog = () => setWarningDialogVisible(true);\n    const deleteChannel = (index) => {\n        closeWarningDialog();\n        AxiosClient.delete(`v1/electric-configs/channels/${channelSettings[index].id}`).then(resp => {\n            const respData = resp.data;\n            if (respData.is_succeed) {\n                setToastMessage(`删除通道 '${channelSettings[index].ch_name}' 成功！`);\n                setToastVisible(true);\n                refreshChannelList();\n            }\n            else {\n                console.log(`删除通道 '${channelSettings[index].ch_name}' 失败: ` + respData.message);\n                setToastMessage(`删除通道 '${channelSettings[index].ch_name}' 失败！`);\n                setToastVisible(true);\n            }\n        })\n            .catch(error => {\n                console.log(`删除通道 '${channelSettings[index].ch_name}' 失败: ` + error.message);\n                setToastMessage(`删除通道 '${channelSettings[index].ch_name}' 失败！`);\n                setToastVisible(true);\n            });\n    };\n\n    const refreshChannelList = () => {\n        AxiosClient.get(`v1/electric-configs/channels`)\n            .then(res => {\n                const respData = res.data\n                if (respData.is_succeed) {\n                    setChannelSettings(respData.data.channels);\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    };\n\n    const showAlertSucceed = (message) => {\n        setOperatingSucceed(true);\n        setAlertMessage(message);\n        setAlertVisible(true);\n    };\n\n    const showAlertFailed = (message) => {\n        setOperatingSucceed(false);\n        setAlertMessage(message);\n        setAlertVisible(true);\n    };\n\n    const updateChannel = (index) => {\n        const chPayload = channelSettings[index];\n\n        console.log('Trying to update channel: ', chPayload);\n        AxiosClient.put(`v1/electric-configs/channels/${chPayload.id}`, chPayload).then(resp => {\n            const respData = resp.data;\n            if (respData.is_succeed) {\n                refreshChannelList();\n                setToastMessage(`更新通道 '${chPayload.ch_name}' 成功！`);\n                setToastVisible(true);\n            }\n            else {\n                setToastMessage(`更新通道 '${chPayload.ch_name}' 失败！`);\n                setToastVisible(true);\n            }\n        })\n            .catch(error => {\n                setToastMessage(`更新通道 '${chPayload.ch_name}' 失败！`);\n                setToastVisible(true);\n            });\n    };\n\n    const addNewChannel = (chName) => {\n        if (chName === '') {\n            showAlertFailed('添加通道失败，通道名不能为空！');\n            return;\n        }\n        const chPayload = {\n            ch_name: chName,\n            ch_temp_read_address: 0,\n            ch_leakcurrent_read_address: 0,\n            ch_current_read_address: 0,\n            current_allowed_range_max: 20,\n            current_info_trigger_range: '10-20',\n            current_info_trigger_duration: 30,\n            current_alarm_trigger_range: '>20',\n            current_alarm_trigger_duration: 30,\n            temp_info_trigger_range: '32-40',\n            temp_info_trigger_duration: 30,\n            temp_alarm_trigger_range: '>40',\n            temp_alarm_trigger_duration: 30,\n            leakcurrent_info_trigger_range: '32-40',\n            leakcurrent_info_trigger_duration: 30,\n            leakcurrent_alarm_trigger_range: '>40',\n            leakcurrent_alarm_trigger_duration: 30\n        };\n\n        console.log('Trying to add new channel: ', chPayload);\n        AxiosClient.post(`v1/electric-configs/channels`, chPayload).then(resp => {\n            const respData = resp.data;\n            if (respData.is_succeed) {\n                showAlertSucceed(`添加通道 '${chPayload.ch_name}' 成功！`);\n                refreshChannelList();\n            }\n            else {\n                showAlertFailed(`添加通道 '${chPayload.ch_name}' 失败: ` + respData.message);\n            }\n        })\n            .catch(error => {\n                showAlertFailed(`添加通道 '${chPayload.ch_name}' 失败: ` + error.message)\n            });\n    };\n\n    //The value trigger expression format supported,\n    // 'a-b': value between a and b\n    // '>a': value is greater than a\n    // '<a': value is smaller than a\n    // Otherwise: invalid format\n    const [channelSettings, setChannelSettings] = useState([]);\n\n    const [advancedSettings, setAdvancedSettings] = useState([\n        false, false, false, false, false\n    ]);\n\n    const handleUpdateChStringSetting = (e, index, field) => {\n        const newSettings = [...channelSettings.slice(0, index),\n        { ...channelSettings[index], [field]: e.target.value },\n        ...channelSettings.slice(index + 1)];\n        setChannelSettings(newSettings);\n    };\n\n    const handleUpdateChIntSetting = (e, index, field) => {\n        const newSettings = [...channelSettings.slice(0, index),\n        { ...channelSettings[index], [field]: parseInt(e.target.value) },\n        ...channelSettings.slice(index + 1)];\n        setChannelSettings(newSettings);\n    };\n\n    useEffect(() => {\n        bsCustomFileInput.init();\n        refreshChannelList();\n    }, []);\n\n    return (\n        <>\n            <Alert show={alertVisible} variant={operatingSucceed ? \"success\" : \"danger\"}\n                onClose={() => setAlertVisible(false)} dismissible>\n                <Alert.Heading>{operatingSucceed ? \"操作成功\" : \"操作失败\"}</Alert.Heading>\n                <p>{alertMessage}</p>\n            </Alert>\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <Toast onClose={() => setToastVisible(false)} style={{\n                    position: 'fixed', zIndex: 3,\n                    width: '80%'\n                }}\n                    show={toastVisible} delay={10000} autohide>\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">电箱配置</strong>\n                        <small>1 mins ago</small>\n                    </Toast.Header>\n                    <Toast.Body>{toastMessage}</Toast.Body>\n                </Toast>\n            </div>\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">{`电箱配置`}</h3>\n                </div>\n                <form className=\"form-inline\">\n                    <label className=\"sr-only\" htmlFor=\"inlineFormChannelName\">Name</label>\n                    <Form.Control type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"inlineFormChannelName\"\n                        value={newChName} onChange={(event) => { setNewChName(event.target.value); }}\n                        placeholder=\"通道名称\" />\n                    {/* <label className=\"sr-only\" htmlFor=\"inlineFormPort\">Port</label>\n                    <div className=\"input-group mb-2 mr-sm-2\">\n                        <Form.Control type=\"text\" className=\"form-control\" id=\"inlineFormPort\"\n                            onChange={this.handleInputScenePortChange} placeholder=\"端口号\" />\n                    </div> */}\n                    <button type=\"button\" className=\"btn btn-gradient-primary mb-2\"\n                        onClick={() => {\n                            addNewChannel(newChName);\n                        }}>添加新通道</button>\n                </form>\n                <div className=\"row mt-5\" style={{\n                    height: '465px',\n                    overflowY: 'scroll'\n                }}>\n                    {\n                        channelSettings.length > 0 ? channelSettings.map((chSetting, index) => {\n                            return (\n                                <div className=\"col-md-6 grid-margin stretch-card\" key={`ch-${chSetting.id}`}>\n                                    <div className=\"card\">\n                                        <div className=\"card-body\">\n                                            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', cursor: 'pointer' }}\n                                                onClick={() => {\n                                                    console.log('To remove channel: ', chSetting.ch_name);\n                                                    setCurrentIndex(index);\n                                                    showWarningDialog();\n                                                }}>\n                                                <h4 className=\"card-title\"><i className=\"mdi mdi-flash-auto\"></i>{`通道${index}`}</h4>\n                                                <i className=\"mdi mdi-delete icon-sm text-primary align-middle\"></i>\n                                            </div>\n\n                                            <form className=\"forms-sample\">\n                                                <Form.Group className=\"row\">\n                                                    <label htmlFor={`chId${chSetting.id}`} className=\"col-sm-3 col-form-label\">ID</label>\n                                                    <div className=\"col-sm-9\">\n                                                        <Form.Control type=\"text\" className=\"form-control\" id={`chId-${chSetting.id}`} placeholder=\"\"\n                                                            value={chSetting.id} readOnly />\n                                                    </div>\n                                                </Form.Group>\n                                                <Form.Group className=\"row\">\n                                                    <label htmlFor={`currentRangeMax${chSetting.id}`} className=\"col-sm-3 col-form-label\">量程</label>\n                                                    <div className=\"col-sm-9\">\n                                                        {/* <Form.Control type=\"text\" className=\"form-control\" id={`currentRange${chSetting.id}`} placeholder=\"\"\n                                                            value={chSetting.current_allowed_range_max} readOnly /> */}\n                                                        <Form.Control as=\"select\"\n                                                            id={`currentRangeMax${chSetting.id}`}\n                                                            className=\"mt-2\"\n                                                            onChange={(event) => handleUpdateChIntSetting(event, index, 'current_allowed_range_max')}\n                                                        >\n                                                            {[\n                                                                '10',\n                                                                '15',\n                                                                '20',\n                                                                '25',\n                                                            ].map((p) => (\n                                                                <option key={p} value={p} selected={parseInt(p) === chSetting.current_allowed_range_max}>\n                                                                    {p}\n                                                                </option>\n                                                            ))}\n                                                        </Form.Control>\n                                                    </div>\n                                                </Form.Group>\n                                                <Form.Group className=\"row\">\n                                                    <label htmlFor={`chName${chSetting.id}`} className=\"col-sm-3 col-form-label\">通道名</label>\n                                                    <div className=\"col-sm-9\">\n                                                        <Form.Control type=\"text\" className=\"form-control\" id={`chName${chSetting.id}`} placeholder=\"\"\n                                                            value={chSetting.ch_name} onChange={(event) => {\n                                                                handleUpdateChStringSetting(event, index, 'ch_name');\n                                                            }} />\n                                                    </div>\n                                                </Form.Group>\n                                                <Form.Group className=\"row\">\n                                                    <button type=\"button\" className=\"btn btn-inverse-danger btn-icon\" onClick={() => {\n                                                        let updated = [...advancedSettings];\n                                                        updated[index] = !updated[index];\n                                                        setAdvancedSettings(updated);\n                                                    }}>\n                                                        <i className={advancedSettings[index] ? \"mdi mdi-chevron-double-up\" : \"mdi mdi-chevron-double-down\"}></i>\n                                                    </button>\n                                                </Form.Group>\n                                                {\n                                                    advancedSettings[index] ? (\n                                                        <>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chTempReadAddress${chSetting.id}`} className=\"col-sm-3 col-form-label\">温度读取地址</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chTempReadAddress${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.ch_temp_read_address} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'ch_temp_read_address');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chLeakCurrentReadAddress${chSetting.id}`} className=\"col-sm-3 col-form-label\">漏电流读取地址</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chLeakCurrentReadAddress${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.ch_leakcurrent_read_address} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'ch_leakcurrent_read_address');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chCurrentReadAddress${chSetting.id}`} className=\"col-sm-3 col-form-label\">电流读取地址</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chCurrentReadAddress${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.ch_current_read_address} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'ch_current_read_address');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <div className='mt-1 mb-1' style={{ width: '100%', height: '1px', backgroundColor: '#78BDF5' }}></div>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverTempInfo${chSetting.id}`} className=\"col-sm-3 col-form-label\">过热触发（提示）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"text\" className=\"form-control\" id={`chOverTempInfo${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.temp_info_trigger_range} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'temp_info_trigger_range');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverTempInfoDuration${chSetting.id}`} className=\"col-sm-3 col-form-label\">触发时间（秒）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chOverTempInfoDuration${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.temp_info_trigger_duration} onChange={(event) => {\n                                                                            handleUpdateChIntSetting(event, index, 'temp_info_trigger_duration');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <div className='mt-1 mb-1' style={{ width: '100%', height: '1px', backgroundColor: '#78BDF5' }}></div>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverTempAlarm${chSetting.id}`} className=\"col-sm-3 col-form-label\">过热触发(告警)</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"text\" className=\"form-control\" id={`chOverTempAlarm${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.temp_alarm_trigger_range} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'temp_alarm_trigger_range');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverTempAlarmDuration${chSetting.id}`} className=\"col-sm-3 col-form-label\">触发时间(秒)</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chOverTempAlarmDuration${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.temp_alarm_trigger_duration} onChange={(event) => {\n                                                                            handleUpdateChIntSetting(event, index, 'temp_alarm_trigger_duration');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <div className='mt-1 mb-1' style={{ width: '100%', height: '1px', backgroundColor: '#78BDF5' }}></div>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverCurrentInfo${chSetting.id}`} className=\"col-sm-3 col-form-label\">过流触发（提示）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"text\" className=\"form-control\" id={`chOverCurrentInfo${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.current_info_trigger_range} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'current_info_trigger_range');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverCurrentInfoDuration${chSetting.id}`} className=\"col-sm-3 col-form-label\">触发时间（秒）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chOverCurrentInfoDuration${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.current_info_trigger_duration} onChange={(event) => {\n                                                                            handleUpdateChIntSetting(event, index, 'current_info_trigger_duration');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <div className='mt-1 mb-1' style={{ width: '100%', height: '1px', backgroundColor: '#78BDF5' }}></div>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverCurrentAlarm${chSetting.id}`} className=\"col-sm-3 col-form-label\">过流触发（告警）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"text\" className=\"form-control\" id={`chOverCurrentAlarm${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.current_alarm_trigger_range} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'current_alarm_trigger_range');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverCurrentAlarmDuration${chSetting.id}`} className=\"col-sm-3 col-form-label\">触发时间（秒）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chOverCurrentAlarmDuration${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.current_alarm_trigger_duration} onChange={(event) => {\n                                                                            handleUpdateChIntSetting(event, index, 'current_alarm_trigger_duration');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <div className='mt-1 mb-1' style={{ width: '100%', height: '1px', backgroundColor: '#78BDF5' }}></div>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverLeakCurrentInfo${chSetting.id}`} className=\"col-sm-3 col-form-label\">漏电流（提示）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"text\" className=\"form-control\" id={`chOverLeakCurrentInfo${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.leakcurrent_info_trigger_range} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'leakcurrent_info_trigger_range');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverLeakCurrentInfoDuration${chSetting.id}`} className=\"col-sm-3 col-form-label\">触发时间（秒）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chOverLeakCurrentInfoDuration${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.leakcurrent_info_trigger_duration} onChange={(event) => {\n                                                                            handleUpdateChIntSetting(event, index, 'leakcurrent_info_trigger_duration');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <div className='mt-1 mb-1' style={{ width: '100%', height: '1px', backgroundColor: '#78BDF5' }}></div>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverLeakCurrentAlarm${chSetting.id}`} className=\"col-sm-3 col-form-label\">漏电流（告警）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"text\" className=\"form-control\" id={`chOverLeakCurrentAlarm${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.leakcurrent_alarm_trigger_range} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'leakcurrent_alarm_trigger_range');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverLeakCurrentAlarmDuration${chSetting.id}`} className=\"col-sm-3 col-form-label\">触发时间（秒）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chOverLeakCurrentAlarmDuration${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.leakcurrent_alarm_trigger_duration} onChange={(event) => {\n                                                                            handleUpdateChIntSetting(event, index, 'leakcurrent_alarm_trigger_duration');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                        </>) : null\n                                                }\n                                                <button type=\"button\" className=\"btn btn-gradient-primary mr-2\" onClick={() => {\n                                                    updateChannel(index);\n                                                }}>确定</button>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>)\n                        }) : '没有通道可显示！'\n                    }\n                </div>\n            </div>\n            <Modal show={warningDialogVisible} onHide={closeWarningDialog}>\n                <Modal.Header closeButton>\n                    <Modal.Title>警告</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{channelSettings.length > 0 && currentIndex >= 0 && currentIndex < channelSettings.length ?\n                    `即将删除通道：${channelSettings[currentIndex].ch_name}，是否继续` : ''}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeWarningDialog}>\n                        取消\n                    </Button>\n                    <Button variant=\"primary\" onClick={() => { deleteChannel(currentIndex); }}>\n                        确定\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n"],"sourceRoot":""}