{"version":3,"sources":["lib/AxiosClient.js","../.yarn/cache/@babel-runtime-npm-7.9.0-fa03662500-dc9b50c189.zip/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../.yarn/__virtual__/react-bootstrap-virtual-2b8498973d/0/cache/react-bootstrap-npm-1.6.7-d11e9077fd-4b345ff1aa.zip/node_modules/react-bootstrap/esm/Alert.js","app/view/ElectricMonitorConfig.js"],"names":["AxiosClient","axios","create","baseURL","timeout","headers","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_excluded","DivStyledAsH4","divWithClassName","displayName","AlertHeading","createWithBsPrefix","Component","AlertLink","SafeAnchor","defaultProps","show","transition","Fade","closeLabel","Alert","forwardRef","uncontrolledProps","ref","_useUncontrolled","bsPrefix","className","children","variant","onClose","dismissible","props","prefix","handleClose","useEventCallback","e","Transition","alert","createElement","role","undefined","CloseButton","onClick","label","unmountOnExit","in","Link","Heading","ElectricMonitorConfig","_useState","useState","_useState2","_slicedToArray","warningDialogVisible","setWarningDialogVisible","_useState3","_useState4","alertVisible","setAlertVisible","_useState5","_useState6","toastVisible","setToastVisible","_useState7","_useState8","toastMessage","setToastMessage","_useState9","_useState10","currentIndex","setCurrentIndex","_useState11","_useState12","newChName","setNewChName","_useState13","_useState14","alertMessage","setAlertMessage","_useState15","_useState16","operatingSucceed","setOperatingSucceed","closeWarningDialog","refreshChannelList","get","then","res","respData","data","is_succeed","setChannelSettings","channels","catch","err","console","log","showAlertFailed","message","addNewChannel","chName","chPayload","ch_name","ch_temp_read_address","ch_leakcurrent_read_address","ch_current_read_address","current_allowed_range_max","current_info_trigger_range","current_info_trigger_duration","current_alarm_trigger_range","current_alarm_trigger_duration","temp_info_trigger_range","temp_info_trigger_duration","temp_alarm_trigger_range","temp_alarm_trigger_duration","leakcurrent_info_trigger_range","leakcurrent_info_trigger_duration","leakcurrent_alarm_trigger_range","leakcurrent_alarm_trigger_duration","post","resp","concat","error","_useState17","_useState18","channelSettings","_useState19","_useState20","advancedSettings","setAdvancedSettings","handleUpdateChStringSetting","index","field","newSettings","_toConsumableArray","slice","_objectSpread","_defineProperty","value","handleUpdateChIntSetting","parseInt","useEffect","bsCustomFileInput","init","React","Fragment","style","display","alignItems","justifyContent","Toast","position","zIndex","width","delay","autohide","Header","Body","htmlFor","Form","Control","type","id","onChange","event","placeholder","height","overflowY","map","chSetting","cursor","Group","readOnly","as","p","selected","updated","backgroundColor","put","updateChannel","Modal","onHide","closeButton","Title","Footer","Button","delete"],"mappings":"6HAAA,aAEMA,EAFN,OAEoBC,EAAMC,OAAO,CAE7BC,QAAS,QACTC,QAAS,IACTC,QAAS,CAAE,WAAY,sBAaZL,O,iCCnBf,8CAEA,SAASM,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GACvCC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAEtDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAGxB,OAAOH,EAGM,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNf,EAAQI,OAAOc,IAAS,GAAMC,SAAQ,SAAUC,GAC9C,YAAeN,EAAQM,EAAKF,EAAOE,OAE5BhB,OAAOiB,0BAChBjB,OAAOkB,iBAAiBR,EAAQV,OAAOiB,0BAA0BH,IAEjElB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GACxChB,OAAOmB,eAAeT,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,OAKjF,OAAON,I,sMC/BLU,EAAY,CAAC,WAAY,OAAQ,aAAc,YAAa,WAAY,UAAW,UAAW,cAAe,cAW7GC,EAAgB,OAAAC,EAAA,GAAiB,MACrCD,EAAcE,YAAc,gBAC5B,IAAIC,EAAe,OAAAC,EAAA,GAAmB,gBAAiB,CACrDC,UAAWL,IAETM,EAAY,OAAAF,EAAA,GAAmB,aAAc,CAC/CC,UAAWE,EAAA,IAETC,EAAe,CACjBC,MAAM,EACNC,WAAYC,EAAA,EACZC,WAAY,eAEVC,EAAqB,IAAMC,YAAW,SAAUC,EAAmBC,GACrE,IAAIC,EAAmB,YAAgBF,EAAmB,CACtDN,KAAM,YAERS,EAAWD,EAAiBC,SAC5BT,EAAOQ,EAAiBR,KACxBG,EAAaK,EAAiBL,WAC9BO,EAAYF,EAAiBE,UAC7BC,EAAWH,EAAiBG,SAC5BC,EAAUJ,EAAiBI,QAC3BC,EAAUL,EAAiBK,QAC3BC,EAAcN,EAAiBM,YAC/Bb,EAAaO,EAAiBP,WAC9Bc,EAAQ,YAA8BP,EAAkBlB,GACtD0B,EAAS,YAAmBP,EAAU,SACtCQ,EAAc,OAAAC,EAAA,IAAiB,SAAUC,GACvCN,GACFA,GAAQ,EAAOM,MAGfC,GAA4B,IAAfnB,EAAsBC,EAAA,EAAOD,EAC1CoB,EAAqB,IAAMC,cAAc,MAAO,YAAS,CAC3DC,KAAM,SACJH,OAAqBI,EAART,EAAmB,CAClCR,IAAKA,EACLG,UAAW,IAAWA,EAAWM,EAAQJ,GAAWI,EAAS,IAAMJ,EAASE,GAAeE,EAAS,kBAClGF,GAA4B,IAAMQ,cAAcG,EAAA,EAAa,CAC/DC,QAAST,EACTU,MAAOxB,IACLQ,GACJ,OAAKS,EACe,IAAME,cAAcF,EAAY,YAAS,CAC3DQ,eAAe,GACdb,EAAO,CACRR,SAAKiB,EACLK,GAAI7B,IACFqB,GANoBrB,EAAOqB,EAAQ,QAQzCjB,EAAMX,YAAc,QACpBW,EAAML,aAAeA,EACrBK,EAAM0B,KAAOjC,EACbO,EAAM2B,QAAUrC,EACD,Q,qDC3DA,SAASsC,IACpB,IAAAC,EAAwDC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhEI,EAAoBF,EAAA,GAAEG,EAAuBH,EAAA,GACpDI,EAAwCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAwCT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAwCb,mBAAS,IAAGc,EAAAZ,YAAAW,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAwCjB,mBAAS,GAAEkB,EAAAhB,YAAAe,EAAA,GAA5CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAkCrB,mBAAS,IAAGsB,EAAApB,YAAAmB,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAwCzB,mBAAS,IAAG0B,EAAAxB,YAAAuB,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,EAAgD7B,oBAAS,GAAK8B,EAAA5B,YAAA2B,EAAA,GAAvDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAEtCG,EAAqB,WAAH,OAAS7B,GAAwB,IAwBnD8B,EAAqB,WACvB5G,IAAY6G,IAAI,gCACXC,MAAK,SAAAC,GACF,IAAMC,EAAWD,EAAIE,KACjBD,EAASE,YACTC,EAAmBH,EAASC,KAAKG,aAEtCC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAUlBG,EAAkB,SAACC,GACrBhB,GAAoB,GACpBJ,EAAgBoB,GAChBxC,GAAgB,IAyBdyC,EAAgB,SAACC,GACnB,GAAe,KAAXA,EAAJ,CAIA,IAAMC,EAAY,CACdC,QAASF,EACTG,qBAAsB,EACtBC,4BAA6B,EAC7BC,wBAAyB,EACzBC,0BAA2B,GAC3BC,2BAA4B,QAC5BC,8BAA+B,GAC/BC,4BAA6B,MAC7BC,+BAAgC,GAChCC,wBAAyB,QACzBC,2BAA4B,GAC5BC,yBAA0B,MAC1BC,4BAA6B,GAC7BC,+BAAgC,QAChCC,kCAAmC,GACnCC,gCAAiC,MACjCC,mCAAoC,IAGxCvB,QAAQC,IAAI,8BAA+BK,GAC3C7H,IAAY+I,KAAK,+BAAgClB,GAAWf,MAAK,SAAAkC,GAC7D,IA7DkBtB,EA6DZV,EAAWgC,EAAK/B,KAClBD,EAASE,YA9DKQ,EA+DG,6BAADuB,OAAUpB,EAAUC,QAAO,wBA9DnDpB,GAAoB,GACpBJ,EAAgBoB,GAChBxC,GAAgB,GA6DR0B,KAGAa,EAAgB,6BAAAwB,OAASpB,EAAUC,QAAO,oBAAWd,EAASU,YAGjEL,OAAM,SAAA6B,GACHzB,EAAgB,6BAAAwB,OAASpB,EAAUC,QAAO,oBAAWoB,EAAMxB,iBAnC/DD,EAAgB,+FA4CxB0B,EAA8CzE,mBAAS,IAAG0E,EAAAxE,YAAAuE,EAAA,GAAnDE,EAAeD,EAAA,GAAEjC,EAAkBiC,EAAA,GAE1CE,EAAgD5E,mBAAS,EACrD,GAAO,GAAO,GAAO,GAAO,IAC9B6E,GAAA3E,YAAA0E,EAAA,GAFKE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAItCG,GAA8B,SAAC/F,EAAGgG,EAAOC,GAC3C,IAAMC,EAAW,GAAAZ,OAAAa,YAAOT,EAAgBU,MAAM,EAAGJ,IAAM,CAAAK,wBAAA,GAClDX,EAAgBM,IAAM,GAAAM,YAAA,GAAGL,EAAQjG,EAAEvC,OAAO8I,SAAKJ,YACjDT,EAAgBU,MAAMJ,EAAQ,KACjCxC,EAAmB0C,IAGjBM,GAA2B,SAACxG,EAAGgG,EAAOC,GACxC,IAAMC,EAAW,GAAAZ,OAAAa,YAAOT,EAAgBU,MAAM,EAAGJ,IAAM,CAAAK,wBAAA,GAClDX,EAAgBM,IAAM,GAAAM,YAAA,GAAGL,EAAQQ,SAASzG,EAAEvC,OAAO8I,UAAMJ,YAC3DT,EAAgBU,MAAMJ,EAAQ,KACjCxC,EAAmB0C,IAQvB,OALAQ,qBAAU,WACNC,IAAkBC,OAClB3D,MACD,IAGC4D,IAAA1G,cAAA0G,IAAAC,SAAA,KACID,IAAA1G,cAAClB,EAAK,CAACJ,KAAMyC,EAAc7B,QAASqD,EAAmB,UAAY,SAC/DpD,QAAS,kBAAM6B,GAAgB,IAAQ5B,aAAW,GAClDkH,IAAA1G,cAAClB,EAAM2B,QAAO,KAAEkC,EAAmB,2BAAS,4BAC5C+D,IAAA1G,cAAA,SAAIuC,IAERmE,IAAA1G,cAAA,OAAK4G,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,WACjEL,IAAA1G,cAACgH,IAAK,CAACzH,QAAS,kBAAMiC,GAAgB,IAAQoF,MAAO,CACjDK,SAAU,QAASC,OAAQ,EAC3BC,MAAO,OAEPzI,KAAM6C,EAAc6F,MAAO,IAAOC,UAAQ,GAC1CX,IAAA1G,cAACgH,IAAMM,OAAM,KACTZ,IAAA1G,cAAA,UAAQZ,UAAU,WAAU,4BAC5BsH,IAAA1G,cAAA,aAAO,eAEX0G,IAAA1G,cAACgH,IAAMO,KAAI,KAAE5F,KAGrB+E,IAAA1G,cAAA,WACI0G,IAAA1G,cAAA,OAAKZ,UAAU,eACXsH,IAAA1G,cAAA,MAAIZ,UAAU,cAAY,6BAE9BsH,IAAA1G,cAAA,QAAMZ,UAAU,eACZsH,IAAA1G,cAAA,SAAOZ,UAAU,UAAUoI,QAAQ,yBAAwB,QAC3Dd,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,OAAOvI,UAAU,4BAA4BwI,GAAG,wBAC/DxB,MAAOjE,EAAW0F,SAAU,SAACC,GAAY1F,EAAa0F,EAAMxK,OAAO8I,QACnE2B,YAAY,6BAMhBrB,IAAA1G,cAAA,UAAQ2H,KAAK,SAASvI,UAAU,gCAC5BgB,QAAS,WACLyD,EAAc1B,KACf,mCAEXuE,IAAA1G,cAAA,OAAKZ,UAAU,WAAWwH,MAAO,CAC7BoB,OAAQ,QACRC,UAAW,WAGP1C,EAAgB9H,OAAS,EAAI8H,EAAgB2C,KAAI,SAACC,EAAWtC,GACzD,OACIa,IAAA1G,cAAA,OAAKZ,UAAU,oCAAoCxB,IAAG,MAAAuH,OAAQgD,EAAUP,KACpElB,IAAA1G,cAAA,OAAKZ,UAAU,QACXsH,IAAA1G,cAAA,OAAKZ,UAAU,aACXsH,IAAA1G,cAAA,OAAK4G,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,gBAAiBqB,OAAQ,WAC1FhI,QAAS,WACLqD,QAAQC,IAAI,sBAAuByE,EAAUnE,SAC7ChC,EAAgB6D,GAhMhC7E,GAAwB,KAmMZ0F,IAAA1G,cAAA,MAAIZ,UAAU,cAAasH,IAAA1G,cAAA,KAAGZ,UAAU,uBAAyB,eAAA+F,OAAMU,IACvEa,IAAA1G,cAAA,KAAGZ,UAAU,sDAGjBsH,IAAA1G,cAAA,QAAMZ,UAAU,gBACZsH,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,OAAArC,OAASgD,EAAUP,IAAMxI,UAAU,2BAA0B,MAC3EsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,OAAOvI,UAAU,eAAewI,GAAE,QAAAzC,OAAUgD,EAAUP,IAAMG,YAAY,GACvF3B,MAAO+B,EAAUP,GAAIU,UAAQ,MAGzC5B,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,kBAAArC,OAAoBgD,EAAUP,IAAMxI,UAAU,2BAA0B,gBACtFsH,IAAA1G,cAAA,OAAKZ,UAAU,YAGXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACa,GAAG,SACbX,GAAE,kBAAAzC,OAAoBgD,EAAUP,IAChCxI,UAAU,OACVyI,SAAU,SAACC,GAAK,OAAKzB,GAAyByB,EAAOjC,EAAO,+BAE3D,CACG,KACA,KACA,KACA,MACFqC,KAAI,SAACM,GAAC,OACJ9B,IAAA1G,cAAA,UAAQpC,IAAK4K,EAAGpC,MAAOoC,EAAGC,SAAUnC,SAASkC,KAAOL,EAAU/D,2BACzDoE,SAMrB9B,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,SAAArC,OAAWgD,EAAUP,IAAMxI,UAAU,2BAA0B,sBAC7EsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,OAAOvI,UAAU,eAAewI,GAAE,SAAAzC,OAAWgD,EAAUP,IAAMG,YAAY,GACxF3B,MAAO+B,EAAUnE,QAAS6D,SAAU,SAACC,GACjClC,GAA4BkC,EAAOjC,EAAO,gBAI1Da,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,UAAQ2H,KAAK,SAASvI,UAAU,kCAAkCgB,QAAS,WACvE,IAAIsI,EAAO1C,YAAON,IAClBgD,EAAQ7C,IAAU6C,EAAQ7C,GAC1BF,GAAoB+C,KAEpBhC,IAAA1G,cAAA,KAAGZ,UAAWsG,GAAiBG,GAAS,4BAA8B,kCAI1EH,GAAiBG,GACba,IAAA1G,cAAA0G,IAAAC,SAAA,KACID,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,oBAAArC,OAAsBgD,EAAUP,IAAMxI,UAAU,2BAA0B,wCACxFsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,SAASvI,UAAU,eAAewI,GAAE,oBAAAzC,OAAsBgD,EAAUP,IAAMG,YAAY,GACrG3B,MAAO+B,EAAUlE,qBAAsB4D,SAAU,SAACC,GAC9ClC,GAA4BkC,EAAOjC,EAAO,6BAI1Da,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,2BAAArC,OAA6BgD,EAAUP,IAAMxI,UAAU,2BAA0B,8CAC/FsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,SAASvI,UAAU,eAAewI,GAAE,2BAAAzC,OAA6BgD,EAAUP,IAAMG,YAAY,GAC5G3B,MAAO+B,EAAUjE,4BAA6B2D,SAAU,SAACC,GACrDlC,GAA4BkC,EAAOjC,EAAO,oCAI1Da,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,uBAAArC,OAAyBgD,EAAUP,IAAMxI,UAAU,2BAA0B,wCAC3FsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,SAASvI,UAAU,eAAewI,GAAE,uBAAAzC,OAAyBgD,EAAUP,IAAMG,YAAY,GACxG3B,MAAO+B,EAAUhE,wBAAyB0D,SAAU,SAACC,GACjDlC,GAA4BkC,EAAOjC,EAAO,gCAI1Da,IAAA1G,cAAA,OAAKZ,UAAU,YAAYwH,MAAO,CAAEO,MAAO,OAAQa,OAAQ,MAAOW,gBAAiB,aACnFjC,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,iBAAArC,OAAmBgD,EAAUP,IAAMxI,UAAU,2BAA0B,oDACrFsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,OAAOvI,UAAU,eAAewI,GAAE,iBAAAzC,OAAmBgD,EAAUP,IAAMG,YAAY,GAChG3B,MAAO+B,EAAU1D,wBAAyBoD,SAAU,SAACC,GACjDlC,GAA4BkC,EAAOjC,EAAO,gCAI1Da,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,yBAAArC,OAA2BgD,EAAUP,IAAMxI,UAAU,2BAA0B,8CAC7FsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,SAASvI,UAAU,eAAewI,GAAE,yBAAAzC,OAA2BgD,EAAUP,IAAMG,YAAY,MAC1G3B,MAAO+B,EAAUzD,2BAA4BmD,SAAU,SAACC,GACpDzB,GAAyByB,EAAOjC,EAAO,mCAIvDa,IAAA1G,cAAA,OAAKZ,UAAU,YAAYwH,MAAO,CAAEO,MAAO,OAAQa,OAAQ,MAAOW,gBAAiB,aACnFjC,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,kBAAArC,OAAoBgD,EAAUP,IAAMxI,UAAU,2BAA0B,0CACtFsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,OAAOvI,UAAU,eAAewI,GAAE,kBAAAzC,OAAoBgD,EAAUP,IAAMG,YAAY,GACjG3B,MAAO+B,EAAUxD,yBAA0BkD,SAAU,SAACC,GAClDlC,GAA4BkC,EAAOjC,EAAO,iCAI1Da,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,0BAAArC,OAA4BgD,EAAUP,IAAMxI,UAAU,2BAA0B,oCAC9FsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,SAASvI,UAAU,eAAewI,GAAE,0BAAAzC,OAA4BgD,EAAUP,IAAMG,YAAY,MAC3G3B,MAAO+B,EAAUvD,4BAA6BiD,SAAU,SAACC,GACrDzB,GAAyByB,EAAOjC,EAAO,oCAIvDa,IAAA1G,cAAA,OAAKZ,UAAU,YAAYwH,MAAO,CAAEO,MAAO,OAAQa,OAAQ,MAAOW,gBAAiB,aACnFjC,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,oBAAArC,OAAsBgD,EAAUP,IAAMxI,UAAU,2BAA0B,oDACxFsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,OAAOvI,UAAU,eAAewI,GAAE,oBAAAzC,OAAsBgD,EAAUP,IAAMG,YAAY,GACnG3B,MAAO+B,EAAU9D,2BAA4BwD,SAAU,SAACC,GACpDlC,GAA4BkC,EAAOjC,EAAO,mCAI1Da,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,4BAAArC,OAA8BgD,EAAUP,IAAMxI,UAAU,2BAA0B,8CAChGsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,SAASvI,UAAU,eAAewI,GAAE,4BAAAzC,OAA8BgD,EAAUP,IAAMG,YAAY,MAC7G3B,MAAO+B,EAAU7D,8BAA+BuD,SAAU,SAACC,GACvDzB,GAAyByB,EAAOjC,EAAO,sCAIvDa,IAAA1G,cAAA,OAAKZ,UAAU,YAAYwH,MAAO,CAAEO,MAAO,OAAQa,OAAQ,MAAOW,gBAAiB,aACnFjC,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,qBAAArC,OAAuBgD,EAAUP,IAAMxI,UAAU,2BAA0B,oDACzFsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,OAAOvI,UAAU,eAAewI,GAAE,qBAAAzC,OAAuBgD,EAAUP,IAAMG,YAAY,GACpG3B,MAAO+B,EAAU5D,4BAA6BsD,SAAU,SAACC,GACrDlC,GAA4BkC,EAAOjC,EAAO,oCAI1Da,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,6BAAArC,OAA+BgD,EAAUP,IAAMxI,UAAU,2BAA0B,8CACjGsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,SAASvI,UAAU,eAAewI,GAAE,6BAAAzC,OAA+BgD,EAAUP,IAAMG,YAAY,MAC9G3B,MAAO+B,EAAU3D,+BAAgCqD,SAAU,SAACC,GACxDzB,GAAyByB,EAAOjC,EAAO,uCAIvDa,IAAA1G,cAAA,OAAKZ,UAAU,YAAYwH,MAAO,CAAEO,MAAO,OAAQa,OAAQ,MAAOW,gBAAiB,aACnFjC,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,wBAAArC,OAA0BgD,EAAUP,IAAMxI,UAAU,2BAA0B,8CAC5FsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,OAAOvI,UAAU,eAAewI,GAAE,wBAAAzC,OAA0BgD,EAAUP,IAAMG,YAAY,MACvG3B,MAAO+B,EAAUtD,+BAAgCgD,SAAU,SAACC,GACxDlC,GAA4BkC,EAAOjC,EAAO,uCAI1Da,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,gCAAArC,OAAkCgD,EAAUP,IAAMxI,UAAU,2BAA0B,8CACpGsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,SAASvI,UAAU,eAAewI,GAAE,gCAAAzC,OAAkCgD,EAAUP,IAAMG,YAAY,MACjH3B,MAAO+B,EAAUrD,kCAAmC+C,SAAU,SAACC,GAC3DzB,GAAyByB,EAAOjC,EAAO,0CAIvDa,IAAA1G,cAAA,OAAKZ,UAAU,YAAYwH,MAAO,CAAEO,MAAO,OAAQa,OAAQ,MAAOW,gBAAiB,aACnFjC,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,yBAAArC,OAA2BgD,EAAUP,IAAMxI,UAAU,2BAA0B,8CAC7FsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,OAAOvI,UAAU,eAAewI,GAAE,yBAAAzC,OAA2BgD,EAAUP,IAAMG,YAAY,MACxG3B,MAAO+B,EAAUpD,gCAAiC8C,SAAU,SAACC,GACzDlC,GAA4BkC,EAAOjC,EAAO,wCAI1Da,IAAA1G,cAACyH,IAAKY,MAAK,CAACjJ,UAAU,OAClBsH,IAAA1G,cAAA,SAAOwH,QAAO,iCAAArC,OAAmCgD,EAAUP,IAAMxI,UAAU,2BAA0B,8CACrGsH,IAAA1G,cAAA,OAAKZ,UAAU,YACXsH,IAAA1G,cAACyH,IAAKC,QAAO,CAACC,KAAK,SAASvI,UAAU,eAAewI,GAAE,iCAAAzC,OAAmCgD,EAAUP,IAAMG,YAAY,MAClH3B,MAAO+B,EAAUnD,mCAAoC6C,SAAU,SAACC,GAC5DzB,GAAyByB,EAAOjC,EAAO,4CAIpD,KAEfa,IAAA1G,cAAA,UAAQ2H,KAAK,SAASvI,UAAU,gCAAgCgB,QAAS,YA3V/F,SAACyF,GACnB,IAAM9B,EAAYwB,EAAgBM,GAElCpC,QAAQC,IAAI,6BAA8BK,GAC1C7H,IAAY0M,IAAI,gCAADzD,OAAiCpB,EAAU6D,IAAM7D,GAAWf,MAAK,SAAAkC,GAC3DA,EAAK/B,KACTC,YACTN,IACAlB,EAAgB,6BAADuD,OAAUpB,EAAUC,QAAO,yBAC1CxC,GAAgB,KAGhBI,EAAgB,6BAADuD,OAAUpB,EAAUC,QAAO,yBAC1CxC,GAAgB,OAGnB+B,OAAM,SAAA6B,GACHxD,EAAgB,6BAADuD,OAAUpB,EAAUC,QAAO,yBAC1CxC,GAAgB,MA0UoBqH,CAAchD,KACf,uBAKtB,qDAIjBa,IAAA1G,cAAC8I,IAAK,CAACpK,KAAMqC,EAAsBgI,OAAQlG,GACvC6D,IAAA1G,cAAC8I,IAAMxB,OAAM,CAAC0B,aAAW,GACrBtC,IAAA1G,cAAC8I,IAAMG,MAAK,KAAC,iBAEjBvC,IAAA1G,cAAC8I,IAAMvB,KAAI,KAAEhC,EAAgB9H,OAAS,GAAKsE,GAAgB,GAAKA,EAAewD,EAAgB9H,OAAM,6CAAA0H,OACvFI,EAAgBxD,GAAciC,QAAO,kCAAU,IAC7D0C,IAAA1G,cAAC8I,IAAMI,OAAM,KACTxC,IAAA1G,cAACmJ,IAAM,CAAC7J,QAAQ,YAAYc,QAASyC,GAAoB,gBAGzD6D,IAAA1G,cAACmJ,IAAM,CAAC7J,QAAQ,UAAUc,QAAS,WA9Z7B,IAACyF,IA8ZkD9D,EA7ZrEc,IACA3G,IAAYkN,OAAO,gCAADjE,OAAiCI,EAAgBM,GAAO+B,KAAM5E,MAAK,SAAAkC,GACjF,IAAMhC,EAAWgC,EAAK/B,KAClBD,EAASE,YACTxB,EAAgB,6BAADuD,OAAUI,EAAgBM,GAAO7B,QAAO,yBACvDxC,GAAgB,GAChBsB,MAGAW,QAAQC,IAAI,6BAAAyB,OAASI,EAAgBM,GAAO7B,QAAO,oBAAWd,EAASU,SACvEhC,EAAgB,6BAADuD,OAAUI,EAAgBM,GAAO7B,QAAO,yBACvDxC,GAAgB,OAGnB+B,OAAM,SAAA6B,GACH3B,QAAQC,IAAI,6BAAAyB,OAASI,EAAgBM,GAAO7B,QAAO,oBAAWoB,EAAMxB,SACpEhC,EAAgB,6BAADuD,OAAUI,EAAgBM,GAAO7B,QAAO,yBACvDxC,GAAgB,QA4Y+D,mB","file":"static/js/10.811fb0b7.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst AxiosClient = axios.create({\n    // baseURL: 'http://localhost/api/',   // Local debug\n    baseURL: '/api/',                // Product\n    timeout: 10000,\n    headers: { 'ls-token': '1234567890abcdef' }\n});\n\n//- or after instance has been created\n// AxiosClient.defaults.headers.post['header1'] = 'value'\n\n//- or before a request is made\n// using Interceptors\n// AxiosClient.interceptors.request.use(config => {\n//   config.headers.post['header1'] = 'value';\n//   return config;\n// });\n\nexport default AxiosClient;","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"show\", \"closeLabel\", \"className\", \"children\", \"variant\", \"onClose\", \"dismissible\", \"transition\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport SafeAnchor from './SafeAnchor';\nvar DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nvar AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nvar AlertLink = createWithBsPrefix('alert-link', {\n  Component: SafeAnchor\n});\nvar defaultProps = {\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nvar Alert = /*#__PURE__*/React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, {\n      show: 'onClose'\n    }),\n    bsPrefix = _useUncontrolled.bsPrefix,\n    show = _useUncontrolled.show,\n    closeLabel = _useUncontrolled.closeLabel,\n    className = _useUncontrolled.className,\n    children = _useUncontrolled.children,\n    variant = _useUncontrolled.variant,\n    onClose = _useUncontrolled.onClose,\n    dismissible = _useUncontrolled.dismissible,\n    transition = _useUncontrolled.transition,\n    props = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n  var prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  var handleClose = useEventCallback(function (e) {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  var Transition = transition === true ? Fade : transition;\n  var alert = /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"alert\"\n  }, !Transition ? props : undefined, {\n    ref: ref,\n    className: classNames(className, prefix, variant && prefix + \"-\" + variant, dismissible && prefix + \"-dismissible\")\n  }), dismissible && /*#__PURE__*/React.createElement(CloseButton, {\n    onClick: handleClose,\n    label: closeLabel\n  }), children);\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/React.createElement(Transition, _extends({\n    unmountOnExit: true\n  }, props, {\n    ref: undefined,\n    in: show\n  }), alert);\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nAlert.Link = AlertLink;\nAlert.Heading = AlertHeading;\nexport default Alert;","import React, { useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Toast from 'react-bootstrap/Toast';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport AxiosClient from '../../lib/AxiosClient';\n\nexport default function ElectricMonitorConfig() {\n    const [warningDialogVisible, setWarningDialogVisible] = useState(false);\n    const [alertVisible, setAlertVisible] = useState(false);\n    const [toastVisible, setToastVisible] = useState(false);\n    const [toastMessage, setToastMessage] = useState('');\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [newChName, setNewChName] = useState('');\n    const [alertMessage, setAlertMessage] = useState('');\n    const [operatingSucceed, setOperatingSucceed] = useState(true);\n\n    const closeWarningDialog = () => setWarningDialogVisible(false);\n    const showWarningDialog = () => setWarningDialogVisible(true);\n    const deleteChannel = (index) => {\n        closeWarningDialog();\n        AxiosClient.delete(`v1/electric-configs/channels/${channelSettings[index].id}`).then(resp => {\n            const respData = resp.data;\n            if (respData.is_succeed) {\n                setToastMessage(`删除通道 '${channelSettings[index].ch_name}' 成功！`);\n                setToastVisible(true);\n                refreshChannelList();\n            }\n            else {\n                console.log(`删除通道 '${channelSettings[index].ch_name}' 失败: ` + respData.message);\n                setToastMessage(`删除通道 '${channelSettings[index].ch_name}' 失败！`);\n                setToastVisible(true);\n            }\n        })\n            .catch(error => {\n                console.log(`删除通道 '${channelSettings[index].ch_name}' 失败: ` + error.message);\n                setToastMessage(`删除通道 '${channelSettings[index].ch_name}' 失败！`);\n                setToastVisible(true);\n            });\n    };\n\n    const refreshChannelList = () => {\n        AxiosClient.get(`v1/electric-configs/channels`)\n            .then(res => {\n                const respData = res.data\n                if (respData.is_succeed) {\n                    setChannelSettings(respData.data.channels);\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    };\n\n    const showAlertSucceed = (message) => {\n        setOperatingSucceed(true);\n        setAlertMessage(message);\n        setAlertVisible(true);\n    };\n\n    const showAlertFailed = (message) => {\n        setOperatingSucceed(false);\n        setAlertMessage(message);\n        setAlertVisible(true);\n    };\n\n    const updateChannel = (index) => {\n        const chPayload = channelSettings[index];\n\n        console.log('Trying to update channel: ', chPayload);\n        AxiosClient.put(`v1/electric-configs/channels/${chPayload.id}`, chPayload).then(resp => {\n            const respData = resp.data;\n            if (respData.is_succeed) {\n                refreshChannelList();\n                setToastMessage(`更新通道 '${chPayload.ch_name}' 成功！`);\n                setToastVisible(true);\n            }\n            else {\n                setToastMessage(`更新通道 '${chPayload.ch_name}' 失败！`);\n                setToastVisible(true);\n            }\n        })\n            .catch(error => {\n                setToastMessage(`更新通道 '${chPayload.ch_name}' 失败！`);\n                setToastVisible(true);\n            });\n    };\n\n    const addNewChannel = (chName) => {\n        if (chName === '') {\n            showAlertFailed('添加通道失败，通道名不能为空！');\n            return;\n        }\n        const chPayload = {\n            ch_name: chName,\n            ch_temp_read_address: 0,\n            ch_leakcurrent_read_address: 0,\n            ch_current_read_address: 0,\n            current_allowed_range_max: 20,\n            current_info_trigger_range: '10-20',\n            current_info_trigger_duration: 30,\n            current_alarm_trigger_range: '>20',\n            current_alarm_trigger_duration: 30,\n            temp_info_trigger_range: '32-40',\n            temp_info_trigger_duration: 30,\n            temp_alarm_trigger_range: '>40',\n            temp_alarm_trigger_duration: 30,\n            leakcurrent_info_trigger_range: '32-40',\n            leakcurrent_info_trigger_duration: 30,\n            leakcurrent_alarm_trigger_range: '>40',\n            leakcurrent_alarm_trigger_duration: 30\n        };\n\n        console.log('Trying to add new channel: ', chPayload);\n        AxiosClient.post(`v1/electric-configs/channels`, chPayload).then(resp => {\n            const respData = resp.data;\n            if (respData.is_succeed) {\n                showAlertSucceed(`添加通道 '${chPayload.ch_name}' 成功！`);\n                refreshChannelList();\n            }\n            else {\n                showAlertFailed(`添加通道 '${chPayload.ch_name}' 失败: ` + respData.message);\n            }\n        })\n            .catch(error => {\n                showAlertFailed(`添加通道 '${chPayload.ch_name}' 失败: ` + error.message)\n            });\n    };\n\n    //The value trigger expression format supported,\n    // 'a-b': value between a and b\n    // '>a': value is greater than a\n    // '<a': value is smaller than a\n    // Otherwise: invalid format\n    const [channelSettings, setChannelSettings] = useState([]);\n\n    const [advancedSettings, setAdvancedSettings] = useState([\n        false, false, false, false, false\n    ]);\n\n    const handleUpdateChStringSetting = (e, index, field) => {\n        const newSettings = [...channelSettings.slice(0, index),\n        { ...channelSettings[index], [field]: e.target.value },\n        ...channelSettings.slice(index + 1)];\n        setChannelSettings(newSettings);\n    };\n\n    const handleUpdateChIntSetting = (e, index, field) => {\n        const newSettings = [...channelSettings.slice(0, index),\n        { ...channelSettings[index], [field]: parseInt(e.target.value) },\n        ...channelSettings.slice(index + 1)];\n        setChannelSettings(newSettings);\n    };\n\n    useEffect(() => {\n        bsCustomFileInput.init();\n        refreshChannelList();\n    }, []);\n\n    return (\n        <>\n            <Alert show={alertVisible} variant={operatingSucceed ? \"success\" : \"danger\"}\n                onClose={() => setAlertVisible(false)} dismissible>\n                <Alert.Heading>{operatingSucceed ? \"操作成功\" : \"操作失败\"}</Alert.Heading>\n                <p>{alertMessage}</p>\n            </Alert>\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <Toast onClose={() => setToastVisible(false)} style={{\n                    position: 'fixed', zIndex: 3,\n                    width: '80%'\n                }}\n                    show={toastVisible} delay={10000} autohide>\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">电箱配置</strong>\n                        <small>1 mins ago</small>\n                    </Toast.Header>\n                    <Toast.Body>{toastMessage}</Toast.Body>\n                </Toast>\n            </div>\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">{`电箱配置`}</h3>\n                </div>\n                <form className=\"form-inline\">\n                    <label className=\"sr-only\" htmlFor=\"inlineFormChannelName\">Name</label>\n                    <Form.Control type=\"text\" className=\"form-control mb-2 mr-sm-2\" id=\"inlineFormChannelName\"\n                        value={newChName} onChange={(event) => { setNewChName(event.target.value); }}\n                        placeholder=\"通道名称\" />\n                    {/* <label className=\"sr-only\" htmlFor=\"inlineFormPort\">Port</label>\n                    <div className=\"input-group mb-2 mr-sm-2\">\n                        <Form.Control type=\"text\" className=\"form-control\" id=\"inlineFormPort\"\n                            onChange={this.handleInputScenePortChange} placeholder=\"端口号\" />\n                    </div> */}\n                    <button type=\"button\" className=\"btn btn-gradient-primary mb-2\"\n                        onClick={() => {\n                            addNewChannel(newChName);\n                        }}>添加新通道</button>\n                </form>\n                <div className=\"row mt-5\" style={{\n                    height: '465px',\n                    overflowY: 'scroll'\n                }}>\n                    {\n                        channelSettings.length > 0 ? channelSettings.map((chSetting, index) => {\n                            return (\n                                <div className=\"col-md-6 grid-margin stretch-card\" key={`ch-${chSetting.id}`}>\n                                    <div className=\"card\">\n                                        <div className=\"card-body\">\n                                            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', cursor: 'pointer' }}\n                                                onClick={() => {\n                                                    console.log('To remove channel: ', chSetting.ch_name);\n                                                    setCurrentIndex(index);\n                                                    showWarningDialog();\n                                                }}>\n                                                <h4 className=\"card-title\"><i className=\"mdi mdi-flash-auto\"></i>{`通道${index}`}</h4>\n                                                <i className=\"mdi mdi-delete icon-sm text-primary align-middle\"></i>\n                                            </div>\n\n                                            <form className=\"forms-sample\">\n                                                <Form.Group className=\"row\">\n                                                    <label htmlFor={`chId${chSetting.id}`} className=\"col-sm-3 col-form-label\">ID</label>\n                                                    <div className=\"col-sm-9\">\n                                                        <Form.Control type=\"text\" className=\"form-control\" id={`chId-${chSetting.id}`} placeholder=\"\"\n                                                            value={chSetting.id} readOnly />\n                                                    </div>\n                                                </Form.Group>\n                                                <Form.Group className=\"row\">\n                                                    <label htmlFor={`currentRangeMax${chSetting.id}`} className=\"col-sm-3 col-form-label\">量程</label>\n                                                    <div className=\"col-sm-9\">\n                                                        {/* <Form.Control type=\"text\" className=\"form-control\" id={`currentRange${chSetting.id}`} placeholder=\"\"\n                                                            value={chSetting.current_allowed_range_max} readOnly /> */}\n                                                        <Form.Control as=\"select\"\n                                                            id={`currentRangeMax${chSetting.id}`}\n                                                            className=\"mt-2\"\n                                                            onChange={(event) => handleUpdateChIntSetting(event, index, 'current_allowed_range_max')}\n                                                        >\n                                                            {[\n                                                                '10',\n                                                                '15',\n                                                                '20',\n                                                                '25',\n                                                            ].map((p) => (\n                                                                <option key={p} value={p} selected={parseInt(p) === chSetting.current_allowed_range_max}>\n                                                                    {p}\n                                                                </option>\n                                                            ))}\n                                                        </Form.Control>\n                                                    </div>\n                                                </Form.Group>\n                                                <Form.Group className=\"row\">\n                                                    <label htmlFor={`chName${chSetting.id}`} className=\"col-sm-3 col-form-label\">通道名</label>\n                                                    <div className=\"col-sm-9\">\n                                                        <Form.Control type=\"text\" className=\"form-control\" id={`chName${chSetting.id}`} placeholder=\"\"\n                                                            value={chSetting.ch_name} onChange={(event) => {\n                                                                handleUpdateChStringSetting(event, index, 'ch_name');\n                                                            }} />\n                                                    </div>\n                                                </Form.Group>\n                                                <Form.Group className=\"row\">\n                                                    <button type=\"button\" className=\"btn btn-inverse-danger btn-icon\" onClick={() => {\n                                                        let updated = [...advancedSettings];\n                                                        updated[index] = !updated[index];\n                                                        setAdvancedSettings(updated);\n                                                    }}>\n                                                        <i className={advancedSettings[index] ? \"mdi mdi-chevron-double-up\" : \"mdi mdi-chevron-double-down\"}></i>\n                                                    </button>\n                                                </Form.Group>\n                                                {\n                                                    advancedSettings[index] ? (\n                                                        <>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chTempReadAddress${chSetting.id}`} className=\"col-sm-3 col-form-label\">温度读取地址</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chTempReadAddress${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.ch_temp_read_address} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'ch_temp_read_address');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chLeakCurrentReadAddress${chSetting.id}`} className=\"col-sm-3 col-form-label\">漏电流读取地址</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chLeakCurrentReadAddress${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.ch_leakcurrent_read_address} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'ch_leakcurrent_read_address');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chCurrentReadAddress${chSetting.id}`} className=\"col-sm-3 col-form-label\">电流读取地址</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chCurrentReadAddress${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.ch_current_read_address} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'ch_current_read_address');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <div className='mt-1 mb-1' style={{ width: '100%', height: '1px', backgroundColor: '#78BDF5' }}></div>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverTempInfo${chSetting.id}`} className=\"col-sm-3 col-form-label\">过热触发（提示）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"text\" className=\"form-control\" id={`chOverTempInfo${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.temp_info_trigger_range} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'temp_info_trigger_range');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverTempInfoDuration${chSetting.id}`} className=\"col-sm-3 col-form-label\">触发时间（秒）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chOverTempInfoDuration${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.temp_info_trigger_duration} onChange={(event) => {\n                                                                            handleUpdateChIntSetting(event, index, 'temp_info_trigger_duration');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <div className='mt-1 mb-1' style={{ width: '100%', height: '1px', backgroundColor: '#78BDF5' }}></div>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverTempAlarm${chSetting.id}`} className=\"col-sm-3 col-form-label\">过热触发(告警)</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"text\" className=\"form-control\" id={`chOverTempAlarm${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.temp_alarm_trigger_range} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'temp_alarm_trigger_range');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverTempAlarmDuration${chSetting.id}`} className=\"col-sm-3 col-form-label\">触发时间(秒)</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chOverTempAlarmDuration${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.temp_alarm_trigger_duration} onChange={(event) => {\n                                                                            handleUpdateChIntSetting(event, index, 'temp_alarm_trigger_duration');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <div className='mt-1 mb-1' style={{ width: '100%', height: '1px', backgroundColor: '#78BDF5' }}></div>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverCurrentInfo${chSetting.id}`} className=\"col-sm-3 col-form-label\">过流触发（提示）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"text\" className=\"form-control\" id={`chOverCurrentInfo${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.current_info_trigger_range} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'current_info_trigger_range');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverCurrentInfoDuration${chSetting.id}`} className=\"col-sm-3 col-form-label\">触发时间（秒）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chOverCurrentInfoDuration${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.current_info_trigger_duration} onChange={(event) => {\n                                                                            handleUpdateChIntSetting(event, index, 'current_info_trigger_duration');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <div className='mt-1 mb-1' style={{ width: '100%', height: '1px', backgroundColor: '#78BDF5' }}></div>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverCurrentAlarm${chSetting.id}`} className=\"col-sm-3 col-form-label\">过流触发（告警）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"text\" className=\"form-control\" id={`chOverCurrentAlarm${chSetting.id}`} placeholder=\"\"\n                                                                        value={chSetting.current_alarm_trigger_range} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'current_alarm_trigger_range');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverCurrentAlarmDuration${chSetting.id}`} className=\"col-sm-3 col-form-label\">触发时间（秒）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chOverCurrentAlarmDuration${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.current_alarm_trigger_duration} onChange={(event) => {\n                                                                            handleUpdateChIntSetting(event, index, 'current_alarm_trigger_duration');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <div className='mt-1 mb-1' style={{ width: '100%', height: '1px', backgroundColor: '#78BDF5' }}></div>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverLeakCurrentInfo${chSetting.id}`} className=\"col-sm-3 col-form-label\">漏电流（提示）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"text\" className=\"form-control\" id={`chOverLeakCurrentInfo${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.leakcurrent_info_trigger_range} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'leakcurrent_info_trigger_range');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverLeakCurrentInfoDuration${chSetting.id}`} className=\"col-sm-3 col-form-label\">触发时间（秒）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chOverLeakCurrentInfoDuration${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.leakcurrent_info_trigger_duration} onChange={(event) => {\n                                                                            handleUpdateChIntSetting(event, index, 'leakcurrent_info_trigger_duration');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <div className='mt-1 mb-1' style={{ width: '100%', height: '1px', backgroundColor: '#78BDF5' }}></div>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverLeakCurrentAlarm${chSetting.id}`} className=\"col-sm-3 col-form-label\">漏电流（告警）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"text\" className=\"form-control\" id={`chOverLeakCurrentAlarm${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.leakcurrent_alarm_trigger_range} onChange={(event) => {\n                                                                            handleUpdateChStringSetting(event, index, 'leakcurrent_alarm_trigger_range');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                            <Form.Group className=\"row\">\n                                                                <label htmlFor={`chOverLeakCurrentAlarmDuration${chSetting.id}`} className=\"col-sm-3 col-form-label\">触发时间（秒）</label>\n                                                                <div className=\"col-sm-9\">\n                                                                    <Form.Control type=\"number\" className=\"form-control\" id={`chOverLeakCurrentAlarmDuration${chSetting.id}`} placeholder=\"250\"\n                                                                        value={chSetting.leakcurrent_alarm_trigger_duration} onChange={(event) => {\n                                                                            handleUpdateChIntSetting(event, index, 'leakcurrent_alarm_trigger_duration');\n                                                                        }} />\n                                                                </div>\n                                                            </Form.Group>\n                                                        </>) : null\n                                                }\n                                                <button type=\"button\" className=\"btn btn-gradient-primary mr-2\" onClick={() => {\n                                                    updateChannel(index);\n                                                }}>确定</button>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>)\n                        }) : '没有通道可显示！'\n                    }\n                </div>\n            </div>\n            <Modal show={warningDialogVisible} onHide={closeWarningDialog}>\n                <Modal.Header closeButton>\n                    <Modal.Title>警告</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{channelSettings.length > 0 && currentIndex >= 0 && currentIndex < channelSettings.length ?\n                    `即将删除通道：${channelSettings[currentIndex].ch_name}，是否继续` : ''}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeWarningDialog}>\n                        取消\n                    </Button>\n                    <Button variant=\"primary\" onClick={() => { deleteChannel(currentIndex); }}>\n                        确定\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n"],"sourceRoot":""}