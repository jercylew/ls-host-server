{"version":3,"sources":["lib/AxiosClient.js","lib/uuid.js","app/view/SystemConfig.js"],"names":["AxiosClient","axios","create","baseURL","timeout","headers","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","HomeUrlPrefix","SystemConfig","_useState","useState","_useState2","_slicedToArray","hostName","setHostName","_useState3","_useState4","hostId","setHostId","_useState5","_useState6","hostKey","setHostKey","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","hostIP","setHostIP","_useState13","_useState14","systemRebootIntervalHour","setSystemRebootIntervalHour","_useState15","_useState16","defaultGateway","setDefaultGateway","_useState17","_useState18","mask","setMask","_useState19","_useState20","dns","setDns","_useState21","_useState22","shellCmd","setShellCmd","_useState23","_useState24","cmdOutput","setCmdOutput","_useState25","_useState26","toastVisible","setToastVisible","_useState27","_useState28","toastMessage","setToastMessage","useEffect","bsCustomFileInput","init","get","then","res","respData","data","is_succeed","host_name","host_id","host_key","auto_reboot_interval_hours","catch","err","console","log","host_ip","default_gateway","React","createElement","Fragment","style","display","alignItems","justifyContent","Toast","onClose","position","zIndex","width","show","delay","autohide","Header","className","Body","Form","Group","htmlFor","Control","type","id","placeholder","value","onChange","event","target","parseInt","onClick","payload","system_reboot_interval_hours","post","resp","concat","message","error","method","ip","gateway","alert","cmd","cmd_result","cols","maxLength","border","resize","height","overflowY","fontSize"],"mappings":"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","file":"static/js/12.07508f7a.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst AxiosClient = axios.create({\n    // baseURL: 'http://localhost/api/',   // Local debug\n    baseURL: '/api/',                // Product\n    timeout: 10000,\n    headers: { 'ls-token': '1234567890abcdef' }\n});\n\n//- or after instance has been created\n// AxiosClient.defaults.headers.post['header1'] = 'value'\n\n//- or before a request is made\n// using Interceptors\n// AxiosClient.interceptors.request.use(config => {\n//   config.headers.post['header1'] = 'value';\n//   return config;\n// });\n\nexport default AxiosClient;","\nconst uuidv4 = () => {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n};\n\nexport { uuidv4 };","import React, { useEffect, useState } from 'react';\nimport {\n    useLocation, Link\n} from \"react-router-dom\";\nimport HomeUrlPrefix from '../HomeUrlPrefix';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport AxiosClient from '../../lib/AxiosClient';\nimport Toast from 'react-bootstrap/Toast';\nimport { uuidv4 } from '../../lib/uuid';\n\nfunction useQuery() {\n    const { search } = useLocation();\n    return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\nconst urlPrefix = HomeUrlPrefix();\nexport default function SystemConfig() {\n    const [hostName, setHostName] = useState('');\n    const [hostId, setHostId] = useState('');\n    const [hostKey, setHostKey] = useState('');\n    const [loginUserName, setLoginUserName] = useState('');\n    const [loginPassword, setLoginPassword] = useState('');\n\n    const [hostIP, setHostIP] = useState('');\n    const [systemRebootIntervalHour, setSystemRebootIntervalHour] = useState(24);\n    const [defaultGateway, setDefaultGateway] = useState('');\n    const [mask, setMask] = useState('255.255.255.0');\n    const [dns, setDns] = useState('114.114.114.114,8.8.8.8');\n\n    const [shellCmd, setShellCmd] = useState('');\n    const [cmdOutput, setCmdOutput] = useState('');\n\n    const [toastVisible, setToastVisible] = useState(false);\n    const [toastMessage, setToastMessage] = useState('');\n\n    const handleHostNameChange = event => {\n        setHostName(event.target.value);\n    };\n\n    const handleApplyHostConfig = () => {\n        const payload = {\n            host_name: hostName,\n            // login_user_name: loginUserName,\n            // login_password: loginPassword,\n            host_id: hostId,\n            host_key: hostKey,\n            system_reboot_interval_hours: systemRebootIntervalHour,\n        };\n\n        AxiosClient.post(`v1/system-config/host`, payload).then(resp => {\n            const respData = resp.data;\n            if (respData.is_succeed) {\n                setToastMessage(`更新主机配置成功！`);\n                setToastVisible(true);\n            }\n            else {\n                console.log(`更新主机配置失败: ${respData.message}`);\n                setToastMessage(`更新主机配置失败！`);\n                setToastVisible(true);\n            }\n        })\n            .catch(error => {\n                console.log(`更新主机配置失败: ${error.message}`);\n                setToastMessage(`更新主机配置失败！`);\n                setToastVisible(true);\n            });\n    };\n\n    const handleApplyNetworkConfig = () => {\n        if (hostIP === '' || defaultGateway === '') {\n            alert('请输入要配的IP和网关！');\n            return;\n        }\n\n        const payload = {\n            method: 'static',\n            ip: hostIP,\n            mask: mask,\n            dns: dns,\n            gateway: defaultGateway,\n        };\n\n        AxiosClient.post(`v1/system-config/network`, payload).then(resp => {\n            const respData = resp.data;\n            if (respData.is_succeed) {\n                setToastMessage(`配置网络成功！`);\n                setToastVisible(true);\n            }\n            else {\n                console.log(`配置网络失败: ${respData.message}`);\n                setToastMessage(`配置网络失败！`);\n                setToastVisible(true);\n            }\n        })\n            .catch(error => {\n                console.log(`配置网络失败: ${error.message}`);\n                setToastMessage(`配置网络失败！`);\n                setToastVisible(true);\n            });\n    };\n\n    const handleRestoreNetworkToDHCP = () => {\n        const payload = {\n            method: 'dhcp',\n        };\n\n        AxiosClient.post(`v1/system-config/network`, payload).then(resp => {\n            const respData = resp.data;\n            if (respData.is_succeed) {\n                setToastMessage(`重置网络成功！`);\n                setToastVisible(true);\n            }\n            else {\n                console.log(`重置网络失败: ${respData.message}`);\n                setToastMessage(`重置网络失败！`);\n                setToastVisible(true);\n            }\n        })\n            .catch(error => {\n                console.log(`重置网络失败: ${error.message}`);\n                setToastMessage(`重置网络失败！`);\n                setToastVisible(true);\n            });\n    };\n\n    const handleExecShellCmd = () => {\n        if (shellCmd === '') {\n            return;\n        }\n\n        const payload = {\n            cmd: shellCmd,\n        };\n\n        AxiosClient.post(`v1/system-config/shell-cmd`, payload).then(resp => {\n            const respData = resp.data;\n            if (respData.is_succeed) {\n                console.log('Cmd result:', respData.data);\n                setCmdOutput(respData.data.cmd_result);\n            }\n            else {\n                console.log(`执行命令失败: ${respData.message}`);\n                setCmdOutput(`执行命令失败: ${respData.message}`);\n            }\n        })\n            .catch(error => {\n                console.log(`执行命令失败: ${error.message}`);\n                setCmdOutput(`执行命令失败: ${error.message}`);\n            });\n    };\n\n\n    useEffect(() => {\n        bsCustomFileInput.init();\n        AxiosClient.get(`v1/system-config/host`)\n            .then(res => {\n                const respData = res.data\n                if (respData.is_succeed) {\n                    setHostName(respData.data.host_name);\n                    // setLoginUserName(respData.data.login_user);\n                    // setLoginPassword(respData.data.login_password);\n                    setHostId(respData.data.host_id);\n                    setHostKey(respData.data.host_key);\n                    setSystemRebootIntervalHour(respData.data.auto_reboot_interval_hours);\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }, []);\n\n    useEffect(() => {\n        bsCustomFileInput.init();\n        AxiosClient.get(`v1/system-config/network`)\n            .then(res => {\n                const respData = res.data\n                if (respData.is_succeed) {\n                    setHostIP(respData.data.host_ip);\n                    setMask(respData.data.mask);\n                    setDefaultGateway(respData.data.default_gateway);\n                    setDns(respData.data.dns);\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <>\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <Toast onClose={() => setToastVisible(false)} style={{\n                    position: 'fixed', zIndex: 3,\n                    width: '80%'\n                }}\n                    show={toastVisible} delay={500000} autohide>\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">系统配置</strong>\n                        <small>1 mins ago</small>\n                    </Toast.Header>\n                    <Toast.Body>{toastMessage}</Toast.Body>\n                </Toast>\n            </div>\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">{`系统设置`}</h3>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\"><i className=\"mdi mdi-laptop\"></i>主机信息</h4>\n                                <form className=\"forms-sample\">\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"hostName\" className=\"col-sm-3 col-form-label\">主机名</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" className=\"form-control\" id=\"hostName\" placeholder=\"主机名， 如： ls-host-23280\"\n                                                value={hostName} onChange={handleHostNameChange} />\n                                        </div>\n                                    </Form.Group>\n                                    {/* <Form.Group className=\"row\">\n                                        <label htmlFor=\"loginUserName\" className=\"col-sm-3 col-form-label\">登录用户名</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" className=\"form-control\" id=\"loginUserName\"\n                                                onChange={(event) => { setLoginUserName(event.target.value) }} placeholder=\"登录用户名\" value={loginUserName} />\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"loginPassword\" className=\"col-sm-3 col-form-label\">登录密码</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"password\" className=\"form-control\" id=\"loginPassword\"\n                                                onChange={(event) => { setLoginPassword(event.target.value); }} placeholder=\"登录密码\" value={loginPassword} />\n                                        </div>\n                                    </Form.Group> */}\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"hostId\" className=\"col-sm-3 col-form-label\">Host Id</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" className=\"form-control\" id=\"hostId\"\n                                                onChange={(event) => { setHostId(event.target.value); }} placeholder=\"Host Id\" value={hostId} />\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"hostKey\" className=\"col-sm-3 col-form-label\">Host Key</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" className=\"form-control\" id=\"hostKey\"\n                                                onChange={(event) => { setHostKey(event.target.value); }} placeholder=\"Host Key\" value={hostKey} />\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"systemRebootIntervalHour\" className=\"col-sm-3 col-form-label\">定时重启（小时）</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"number\" className=\"form-control\" id=\"systemRebootIntervalHour\"\n                                                value={systemRebootIntervalHour}\n                                                onChange={(event) => { setSystemRebootIntervalHour(parseInt(event.target.value)); }}\n                                                placeholder=\"设置自动重启时间间隔\" />\n                                        </div>\n                                    </Form.Group>\n                                    <button type=\"button\" className=\"btn btn-gradient-primary mr-2\" onClick={handleApplyHostConfig}>确定</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\"><i className=\"mdi mdi-ethernet\"></i>网络配置</h4>\n                                <form className=\"forms-sample\">\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"hostIP\" className=\"col-sm-3 col-form-label\">IP</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" className=\"form-control\" id=\"hostIP\" placeholder=\"IP地址, 如： 192.168.2.100\"\n                                                value={hostIP} onChange={(event) => { setHostIP(event.target.value); }} />\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"defaultGateway\" className=\"col-sm-3 col-form-label\">默认网关</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" className=\"form-control\" id=\"defaultGateway\" placeholder=\"默认网关，如： 192.168.2.1\"\n                                                value={defaultGateway} onChange={(event) => { setDefaultGateway(event.target.value); }} />\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"mask\" className=\"col-sm-3 col-form-label\">子网掩码</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" className=\"form-control\" id=\"mask\" placeholder=\"子网掩码，如： 255.255.255.0\"\n                                                value={mask} onChange={(event) => { setMask(event.target.value); }} />\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"dns\" className=\"col-sm-3 col-form-label\">DNS(逗号隔开)</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={dns} className=\"form-control\" id=\"dns\"\n                                                onChange={(event) => { setDns(event.target.value); }} placeholder=\"DNS, 如： 114.114.114.114,8.8.8.8\" />\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"row\">\n                                        <button type=\"button\" className=\"btn btn-gradient-primary col-sm-6 col-md-3 col-lg-3 mt-2\" onClick={handleApplyNetworkConfig}>确定</button>\n                                        <button type=\"button\" className=\"btn btn-gradient-danger col-sm-6 col-md-3 col-lg-3 mt-2\" onClick={handleRestoreNetworkToDHCP}>重置</button>\n                                    </Form.Group>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\"><i className=\"mdi mdi-video\"></i>执行Shell命令</h4>\n                                <p className=\"card-description\">注： 输入框中输入Linux Shell命令， 点击确认发送命令执行， 执行结果将于下面方框区显示\n                                </p>\n                                <Form.Group className=\"row\">\n                                    <label htmlFor=\"shellCmd\" className=\"col-sm-3 col-form-label\">命令</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control type=\"text\" className=\"form-control\" id=\"shellCmd\"\n                                            value={shellCmd} onChange={(event) => { setShellCmd(event.target.value); }}\n                                            placeholder=\"输入Linux Shell命令, 如ps aux | grep TKTMesh\" />\n                                    </div>\n                                </Form.Group>\n                                <button type=\"button\" className=\"btn btn-gradient-primary mr-2\" onClick={handleExecShellCmd}>执行</button>\n                                <Form.Group className=\"row\">\n                                    <div className='mt-4'>{`命令执行结果:`}</div>\n                                    <textarea cols='90' value={cmdOutput}\n                                        maxLength='999999' id='cmdResult'\n                                        className='col-sm-12'\n                                        style={{ border: 'dashed 1px #CFCFCF',\n                                        resize: 'both', height: '280px',overflowY: 'scroll',\n                                        width: '100%', fontSize: '12px' }} />\n                                </Form.Group>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n"],"sourceRoot":""}