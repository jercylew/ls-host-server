{"version":3,"sources":["lib/AxiosClient.js","lib/uuid.js","app/view/SceneConfig.js"],"names":["AxiosClient","axios","create","baseURL","timeout","headers","uuidv4","replace","c","crypto","getRandomValues","Uint8Array","toString","RtspSourceType","CameraManufacture","HomeUrlPrefix","SceneConfig","search","useLocation","React","useMemo","URLSearchParams","useQuery","_useState","useState","_useState2","_slicedToArray","warningDialogVisible","setWarningDialogVisible","_useState3","_useState4","cameraChEditDialogVisible","setCameraChEditDialogVisible","_useState5","_useState6","sceneName","setSceneName","_useState7","_useState8","frpPort","setFrpPort","_useState9","_useState10","sceneAddress","setSceneAddress","_useState11","_useState12","gpsCoordinate","setGpsCoordinate","_useState13","_useState14","telephone","setTelephone","_useState15","_useState16","cameraChannels","setCameraChannels","_useState17","_useState18","rtspSourceType","setRtspSourceType","_useState19","_useState20","cameraManufacture","setCameraManufacture","_useState21","_useState22","channelName","setChannelName","_useState23","_useState24","videoRecorderIP","setVideoRecorderIP","_useState25","_useState26","rtspUserName","setRtspUserName","_useState27","_useState28","rtspPassword","setRtspPassword","_useState29","_useState30","rtspChannels","setRtspChannels","_useState31","_useState32","cameraIP","setCameraIP","_useState33","_useState34","cameraUserName","setCameraUserName","_useState35","_useState36","cameraPassword","setCameraPassword","_useState37","_useState38","currentIndex","setCurrentIndex","_useState39","_useState40","toastVisible","setToastVisible","_useState41","_useState42","toastMessage","setToastMessage","_useState43","_useState44","editCameraChannelName","setEditCameraChannelName","_useState45","_useState46","editCameraIp","setEditCameraIp","_useState47","_useState48","editRtspUser","setEditRtspUser","_useState49","_useState50","editRtspPassword","setEditRtspPassword","_useState51","_useState52","editCameraVendor","setEditCameraVendor","_useState53","_useState54","editRtspChannelId","setEditRtspChannelId","closeWarningDialog","closeCameraChEditDialog","refreshChannelList","get","then","res","respData","data","is_succeed","channels","catch","err","console","log","handleRtspSourceChange","event","parseInt","target","value","useEffect","bsCustomFileInput","init","scene_name","scene_address","gps_coordinate","tel_number","frp_port","createElement","Fragment","style","display","alignItems","justifyContent","Toast","onClose","position","zIndex","width","show","delay","autohide","Header","className","Body","Form","Group","htmlFor","Control","type","id","placeholder","onChange","onClick","payload","name","address","port","post","resp","concat","message","error","checked","selected","cameraChannelsToSave","alert","channelNames","split","channelNameIndex","rtspChRanges","i","length","range","includes","startEnd","j","cameraChannelInfo","camera_vendor","rtsp_user","rtsp_password","rtsp_ip","rtsp_channel_id","push","reqPromises","p","Promise","all","resps","allSucceed","messages","map","chCamera","index","key","cursor","Modal","onHide","closeButton","Title","Footer","Button","variant","chName","delete","deleteChannel","height","overflowY","put","updateChannel"],"mappings":"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","file":"static/js/11.f1a44c01.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst AxiosClient = axios.create({\n    // baseURL: 'http://localhost/api/',   // Local debug\n    baseURL: '/api/',                // Product\n    timeout: 10000,\n    headers: { 'ls-token': '1234567890abcdef' }\n});\n\n//- or after instance has been created\n// AxiosClient.defaults.headers.post['header1'] = 'value'\n\n//- or before a request is made\n// using Interceptors\n// AxiosClient.interceptors.request.use(config => {\n//   config.headers.post['header1'] = 'value';\n//   return config;\n// });\n\nexport default AxiosClient;","\nconst uuidv4 = () => {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n};\n\nexport { uuidv4 };","import React, { useEffect, useState } from 'react';\nimport {\n    useLocation, Link\n} from \"react-router-dom\";\nimport HomeUrlPrefix from '../HomeUrlPrefix';\nimport { Form } from 'react-bootstrap';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport AxiosClient from '../../lib/AxiosClient';\nimport Toast from 'react-bootstrap/Toast';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { ProgressBar } from 'react-bootstrap';\nimport { uuidv4 } from '../../lib/uuid';\n\nfunction useQuery() {\n    const { search } = useLocation();\n    return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\nconst RtspSourceType = {\n    VideoRecorder: 0,\n    DirectCamera: 1,\n};\n\nconst CameraManufacture = {\n    HikVision: 0,\n    Dahua: 1,\n};\n\nconst rtspSrcTypeToText = type => {\n    if (type === RtspSourceType.VideoRecorder) {\n        return 'recorder';\n    }\n    else if (type === RtspSourceType.DirectCamera) {\n        return 'camera';\n    }\n    else {\n        return '';\n    }\n};\n\nconst cameraManufactureToText = manufacture => {\n    if (manufacture === CameraManufacture.HikVision) {\n        return 'hkvision';\n    }\n    else if (manufacture === CameraManufacture.Dahua) {\n        return 'dahua';\n    }\n    else {\n        return '';\n    }\n};\n\nconst urlPrefix = HomeUrlPrefix();\nexport default function SceneConfig() {\n    const query = useQuery();\n\n    const [warningDialogVisible, setWarningDialogVisible] = useState(false);\n    const [cameraChEditDialogVisible, setCameraChEditDialogVisible] = useState(false)\n\n    const [sceneName, setSceneName] = useState('');\n    const [frpPort, setFrpPort] = useState('');\n    const [sceneAddress, setSceneAddress] = useState('');\n    const [gpsCoordinate, setGpsCoordinate] = useState('');\n    const [telephone, setTelephone] = useState('');\n    const [cameraChannels, setCameraChannels] = useState([]);\n\n    const [rtspSourceType, setRtspSourceType] = useState(RtspSourceType.VideoRecorder);\n    const [cameraManufacture, setCameraManufacture] = useState(CameraManufacture.HikVision);\n    const [channelName, setChannelName] = useState('');\n\n    const [videoRecorderIP, setVideoRecorderIP] = useState('');\n    const [rtspUserName, setRtspUserName] = useState('admin');\n    const [rtspPassword, setRtspPassword] = useState('admin123');\n    const [rtspChannels, setRtspChannels] = useState('1-8');\n\n    const [cameraIP, setCameraIP] = useState('');\n    const [cameraUserName, setCameraUserName] = useState('');\n    const [cameraPassword, setCameraPassword] = useState('');\n    const [currentIndex, setCurrentIndex] = useState(0);\n\n\n    const [toastVisible, setToastVisible] = useState(false);\n    const [toastMessage, setToastMessage] = useState('');\n\n    //Edit\n    const [editCameraChannelName, setEditCameraChannelName] = useState('');\n    const [editCameraIp, setEditCameraIp] = useState('');\n    const [editRtspUser, setEditRtspUser] = useState('');\n    const [editRtspPassword, setEditRtspPassword] = useState('');\n    const [editCameraVendor, setEditCameraVendor] = useState(CameraManufacture.HikVision);\n    const [editRtspChannelId, setEditRtspChannelId] = useState(1);\n\n    const closeWarningDialog = () => setWarningDialogVisible(false);\n    const showWarningDialog = () => setWarningDialogVisible(true);\n\n    const closeCameraChEditDialog = () => setCameraChEditDialogVisible(false);\n    const showCameraChEdiDialog = () => setCameraChEditDialogVisible(true);\n\n    const deleteChannel = (index) => {\n        const chName = cameraChannels[index].name;\n        closeWarningDialog();\n\n        AxiosClient.delete(`v1/scene-config/cameras/${cameraChannels[index].id}`).then(resp => {\n            const respData = resp.data;\n            if (respData.is_succeed) {\n                setToastMessage(`删除通道 '${chName}' 成功！`);\n                setToastVisible(true);\n                refreshChannelList();\n            }\n            else {\n                console.log(`删除通道 '${chName}' 失败: ` + respData.message);\n                setToastMessage(`删除通道 '${chName}' 失败！`);\n                setToastVisible(true);\n            }\n        })\n            .catch(error => {\n                console.log(`删除通道 '${chName}' 失败: ` + error.message);\n                setToastMessage(`删除通道 '${chName}' 失败！`);\n                setToastVisible(true);\n            });\n    };\n\n    const refreshChannelList = () => {\n        AxiosClient.get(`v1/scene-config/cameras`)\n            .then(res => {\n                const respData = res.data\n                if (respData.is_succeed) {\n                    setCameraChannels(respData.data.channels);\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    };\n\n    const updateChannel = (index) => {\n        closeCameraChEditDialog();\n        const cameraChannelInfo = {\n            name: editCameraChannelName,\n            camera_vendor: editCameraVendor,\n            rtsp_user: editRtspUser,\n            rtsp_password: editRtspPassword,\n            rtsp_ip: editCameraIp,\n            rtsp_channel_id: editRtspChannelId\n        };\n\n        AxiosClient.put(`v1/scene-config/cameras/${cameraChannels[index].id}`, cameraChannelInfo).then(resp => {\n            const respData = resp.data;\n            if (respData.is_succeed) {\n                setToastMessage(`更新摄像头通道成功！`);\n                setToastVisible(true);\n                refreshChannelList();\n            }\n            else {\n                console.log(`更新摄像头通道失败: ${respData.message}`);\n                setToastMessage(`更新摄像头通道失败！`);\n                setToastVisible(true);\n            }\n        })\n            .catch(error => {\n                console.log(`更新摄像头通道失败: ${error.message}`);\n                setToastMessage(`更新摄像头通道失败！`);\n                setToastVisible(true);\n            });\n    };\n\n\n    const handleRtspSourceChange = event => {\n        setRtspSourceType(parseInt(event.target.value));\n    };\n\n    const handleCameraManufactureChange = event => {\n        setCameraManufacture(parseInt(event.target.value));\n    };\n\n    const handleVideoRecorderIPChange = event => {\n        setVideoRecorderIP(event.target.value);\n    };\n\n    const handleRtspUserNameChange = event => {\n        setRtspUserName(event.target.value);\n    };\n\n    const handleRtspPasswordChange = event => {\n        setRtspPassword(event.target.value);\n    };\n\n    const handleRtspChannelsChange = event => {\n        setRtspChannels(event.target.value);\n    };\n\n    const handleCameraIPChange = event => {\n        setCameraIP(event.target.value);\n    };\n\n    const handleCameraUserNameChange = event => {\n        setCameraUserName(event.target.value);\n    };\n\n    const handleCameraPasswordChange = event => {\n        setCameraPassword(event.target.value);\n    };\n\n    const handleApplySceneConfig = () => {\n        const payload = {\n            name: sceneName,\n            address: sceneAddress,\n            port: frpPort,\n            tel_number: telephone,\n            gps_coordinate: gpsCoordinate\n        };\n\n        AxiosClient.post(`v1/scene-config/scene`, payload).then(resp => {\n            const respData = resp.data;\n            if (respData.is_succeed) {\n                setToastMessage(`更新场地成功！`);\n                setToastVisible(true);\n            }\n            else {\n                console.log(`更新场地失败: ${respData.message}`);\n                setToastMessage(`更新场地失败！`);\n                setToastVisible(true);\n            }\n        })\n            .catch(error => {\n                console.log(`更新场地失败: ${error.message}`);\n                setToastMessage(`更新场地失败！`);\n                setToastVisible(true);\n            });\n    };\n\n    const handleApplyVideoConfig = () => {\n        let cameraChannelsToSave = [];\n\n        if (rtspSourceType === RtspSourceType.VideoRecorder) {\n            if (rtspChannels === '') {\n                alert('请输入通道号！');\n                return;\n            }\n\n            if (rtspUserName === '' || rtspPassword === '') {\n                alert('请输入录像机用户名和密码！');\n                return;\n            }\n\n            if (videoRecorderIP === '') {\n                alert('请输入录像机IP！');\n                return;\n            }\n\n            const channelNames = channelName.split(\",\");\n            let channelNameIndex = 0;\n            const rtspChRanges = rtspChannels.split(\",\");\n            for (let i = 0;i < rtspChRanges.length;i++) {\n                const range = rtspChRanges[i];\n                if (range.includes(\"-\")) {\n                    const startEnd = range.split(\"-\");\n                    if (startEnd.length == 2) {\n                        if (startEnd[0] < startEnd[1]) {\n                            for (let j = parseInt(startEnd[0]);j <= parseInt(startEnd[1]);j++) {\n                                const cameraChannelInfo = {\n                                    name: (channelNameIndex >= 0 && channelNameIndex < channelNames.length) ?\n                                        channelNames[channelNameIndex] : \"未命名通道\",\n                                    camera_vendor: cameraManufacture,\n                                    rtsp_user: rtspUserName,\n                                    rtsp_password: rtspPassword,\n                                    rtsp_ip: videoRecorderIP,\n                                    rtsp_channel_id: j\n                                };\n                                cameraChannelsToSave.push(cameraChannelInfo);\n                            }\n                        }\n                    }\n                }\n                else {\n                    const cameraChannelInfo = {\n                        name: (channelNameIndex >= 0 && channelNameIndex < channelNames.length) ?\n                            channelNames[channelNameIndex] : \"未命名通道\",\n                        camera_vendor: cameraManufacture,\n                        rtsp_user: rtspUserName,\n                        rtsp_password: rtspPassword,\n                        rtsp_ip: videoRecorderIP,\n                        rtsp_channel_id: parseInt(range)\n                    };\n                    cameraChannelsToSave.push(cameraChannelInfo);\n                }\n                channelNameIndex++;\n            }\n        }\n        else {\n            if (cameraIP === '') {\n                alert('请输入摄像头IP！');\n                return;\n            }\n\n            if (cameraUserName === '' || cameraPassword === '') {\n                alert('请输入摄像头用户名和密码！');\n                return;\n            }\n\n            const cameraChannelInfo = {\n                name: channelName,\n                camera_vendor: cameraManufacture,\n                rtsp_user: cameraUserName,\n                rtsp_password: cameraPassword,\n                rtsp_ip: cameraIP,\n                rtsp_channel_id: 1\n            };\n            cameraChannelsToSave.push(cameraChannelInfo);\n        }\n\n        let reqPromises = [];\n        for (let i = 0;i < cameraChannelsToSave.length;i++) {\n            const p = AxiosClient.post(`v1/scene-config/cameras`, cameraChannelsToSave[i]);\n            reqPromises.push(p);\n        }\n\n        Promise.all(reqPromises).then((resps) => {\n            console.log(resps);\n            let allSucceed = true;\n            let messages = \"\";\n\n            for (let j = 0;j < resps.length;j++) {\n                if (!resps[j].data.is_succeed) {\n                    allSucceed = false;\n                    messages = messages + \",\" + resps[j].data.message;\n                }\n            }\n\n            if (allSucceed) {\n                setToastMessage(`添加摄像头通道成功！`);\n                setToastVisible(true);\n                refreshChannelList();\n            }\n            else {\n                console.log(`添加摄像头通道失败: ${messages}`);\n                setToastMessage(`添加摄像头通道失败！`);\n                setToastVisible(true);\n            }\n          }).catch(error => {\n            console.log(`添加摄像头通道失败: ${error.message}`);\n            setToastMessage(`添加摄像头通道失败！`);\n            setToastVisible(true);\n        });\n\n        // Send to server\n        // cameraChannelsToSave.forEach((channel) => {\n        //     AxiosClient.post(`v1/scene-config/cameras`, channel).then(resp => {\n        //         const respData = resp.data;\n        //         if (respData.is_succeed) {\n        //             setToastMessage(`添加摄像头通道成功！`);\n        //             setToastVisible(true);\n        //         }\n        //         else {\n        //             console.log(`添加摄像头通道失败: ${respData.message}`);\n        //             setToastMessage(`添加摄像头通道失败！`);\n        //             setToastVisible(true);\n        //         }\n        //     })\n        //         .catch(error => {\n        //             console.log(`添加摄像头通道失败: ${error.message}`);\n        //             setToastMessage(`添加摄像头通道失败！`);\n        //             setToastVisible(true);\n        //         });\n        // });\n    };\n\n    useEffect(() => {\n        bsCustomFileInput.init();\n        AxiosClient.get(`v1/scene-config/scene`)\n            .then(res => {\n                const respData = res.data\n                if (respData.is_succeed) {\n                    setSceneName(respData.data.scene_name)\n                    setSceneAddress(respData.data.scene_address)\n                    setGpsCoordinate(respData.data.gps_coordinate)\n                    setTelephone(respData.data.tel_number)\n                    setFrpPort(respData.data.frp_port)\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }, []);\n\n    useEffect(() => {\n        bsCustomFileInput.init();\n        refreshChannelList();\n    }, []);\n\n    return (\n        <>\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <Toast onClose={() => setToastVisible(false)} style={{\n                    position: 'fixed', zIndex: 3,\n                    width: '80%'\n                }}\n                    show={toastVisible} delay={500000} autohide>\n                    <Toast.Header>\n                        <strong className=\"mr-auto\">系统配置</strong>\n                        <small>1 mins ago</small>\n                    </Toast.Header>\n                    <Toast.Body>{toastMessage}</Toast.Body>\n                </Toast>\n            </div>\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">{`场地配置`}</h3>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\"><i className=\"mdi mdi-map-marker-multiple\"></i>场地</h4>\n                                <form className=\"forms-sample\">\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"sceneName\" className=\"col-sm-3 col-form-label\">场地名称</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" className=\"form-control\" id=\"sceneName\" placeholder=\"场地名称, 如： XXX中学高二三班\"\n                                                value={sceneName} onChange={ (event) => { setSceneName(event.target.value); } } />\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"frpPort\" className=\"col-sm-3 col-form-label\">端口</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" className=\"form-control\" id=\"frpPort\" placeholder=\"远程配置端口，如： 23280\"\n                                                value={frpPort} onChange={ (event) => { setFrpPort(event.target.value); } } />\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"sceneAddress\" className=\"col-sm-3 col-form-label\">地址</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" className=\"form-control\" id=\"sceneAddress\" placeholder=\"地址\"\n                                                value={sceneAddress} onChange={ (event) => { setSceneAddress(event.target.value); } } />\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"gpsCoordinate\" className=\"col-sm-3 col-form-label\">GPS坐标</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={gpsCoordinate} className=\"form-control\" id=\"gpsCoordinate\"\n                                                onChange={(event) => { setGpsCoordinate(event.target.value); }} placeholder=\"如： 2450.334, 3351.34\" />\n                                        </div>\n                                    </Form.Group>\n                                    <Form.Group className=\"row\">\n                                        <label htmlFor=\"telephone\" className=\"col-sm-3 col-form-label\">联系电话</label>\n                                        <div className=\"col-sm-9\">\n                                            <Form.Control type=\"text\" value={telephone} className=\"form-control\" id=\"telephone\"\n                                                onChange={ (event) => { setTelephone(event.target.value); } } placeholder=\"座机或手机号码，如： 0755-28964567, 13954324569\" />\n                                        </div>\n                                    </Form.Group>\n                                    <button type=\"button\" className=\"btn btn-gradient-primary mr-2\" onClick={handleApplySceneConfig}>确定</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\"><i className=\"mdi mdi-video\"></i>视频配置</h4>\n                                <p className=\"card-description\">注： 通过录像机可以一次性添加多个通道，但通过摄像头添加时需一个一个单独添加，因为每个摄像头IP都不一样\n                                </p>\n                                <Form.Group className=\"row\">\n                                    <label className=\"col-sm-3 col-form-label\">取流方式</label>\n                                    <div className=\"col-sm-4\">\n                                        <div className=\"form-check\">\n                                            <label className=\"form-check-label\">\n                                                <input type=\"radio\" className=\"form-check-input\"\n                                                    name=\"rtspSourceRecorder\" id=\"rtspSourceRecorder\"\n                                                    value={RtspSourceType.VideoRecorder}\n                                                    onChange={handleRtspSourceChange}\n                                                    checked={rtspSourceType === RtspSourceType.VideoRecorder} /> 通过录像机\n                                                <i className=\"input-helper\"></i>\n                                            </label>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-sm-5\">\n                                        <div className=\"form-check\">\n                                            <label className=\"form-check-label\">\n                                                <input type=\"radio\" className=\"form-check-input\"\n                                                    name=\"rtspSourceCamera\" id=\"rtspSourceCamera\"\n                                                    value={RtspSourceType.DirectCamera}\n                                                    onChange={handleRtspSourceChange}\n                                                    checked={rtspSourceType === RtspSourceType.DirectCamera} /> 通过摄像头\n                                                <i className=\"input-helper\"></i>\n                                            </label>\n                                        </div>\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className=\"row\">\n                                    <label className=\"col-sm-3 col-form-label\">录像机品牌</label>\n                                    <div className=\"col-sm-9\">\n                                        <select className=\"form-control\" onChange={handleCameraManufactureChange}>\n                                            <option value={CameraManufacture.HikVision}\n                                                selected={cameraManufacture === CameraManufacture.HikVision}>海康威视</option>\n                                            <option value={CameraManufacture.Dahua}\n                                                selected={cameraManufacture === CameraManufacture.Dahua}>大华</option>\n                                        </select>\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className=\"row\">\n                                    <label htmlFor=\"channelName\" className=\"col-sm-3 col-form-label\">通道名称</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control type=\"text\" className=\"form-control\" id=\"channelName\"\n                                            onChange={(event) => {\n                                                setChannelName(event.target.value);\n                                            }} placeholder=\"如果是通过录像机添加，则在这里可以输入多个通道名称，以逗号隔开，与后面批量添加通道对应！\" value={channelName} />\n                                    </div>\n                                </Form.Group>\n                                {\n                                    rtspSourceType === RtspSourceType.VideoRecorder ?\n                                        <div className=\"forms-sample\">\n                                            <Form.Group className=\"row\">\n                                                <label htmlFor=\"videoRecorderIP\" className=\"col-sm-3 col-form-label\">录像机IP</label>\n                                                <div className=\"col-sm-9\">\n                                                    <Form.Control type=\"text\" className=\"form-control\" id=\"videoRecorderIP\"\n                                                        placeholder=\"录像机IP\" value={videoRecorderIP} onChange={handleVideoRecorderIPChange} />\n                                                </div>\n                                            </Form.Group>\n                                            <Form.Group className=\"row\">\n                                                <label htmlFor=\"rtspUserName\" className=\"col-sm-3 col-form-label\">用户名</label>\n                                                <div className=\"col-sm-9\">\n                                                    <Form.Control type=\"text\" className=\"form-control\" id=\"rtspUserName\"\n                                                        onChange={handleRtspUserNameChange} placeholder=\"用户名\" value={rtspUserName} />\n                                                </div>\n                                            </Form.Group>\n                                            <Form.Group className=\"row\">\n                                                <label htmlFor=\"rtspPassword\" className=\"col-sm-3 col-form-label\">密码</label>\n                                                <div className=\"col-sm-9\">\n                                                    <Form.Control type=\"text\" className=\"form-control\" id=\"rtspPassword\"\n                                                        onChange={handleRtspPasswordChange} placeholder=\"密码\" value={rtspPassword} />\n                                                </div>\n                                            </Form.Group>\n                                            <Form.Group className=\"row\">\n                                                <label htmlFor=\"rtspChannels\" className=\"col-sm-3 col-form-label\">通道</label>\n                                                <div className=\"col-sm-9\">\n                                                    <Form.Control type=\"text\" className=\"form-control\" id=\"rtspChannels\" placeholder=\"支持逗号隔开(1,3,5)和范围指定(1-8)两种格式\"\n                                                        value={rtspChannels} onChange={handleRtspChannelsChange} />\n                                                </div>\n                                            </Form.Group>\n                                        </div> :\n                                        <div className=\"forms-sample\">\n                                            <Form.Group className=\"row\">\n                                                <label htmlFor=\"cameraIP\" className=\"col-sm-3 col-form-label\">摄像头IP</label>\n                                                <div className=\"col-sm-9\">\n                                                    <Form.Control type=\"text\" className=\"form-control\" id=\"cameraIP\" placeholder=\"摄像头IP\"\n                                                        value={cameraIP} onChange={handleCameraIPChange} />\n                                                </div>\n                                            </Form.Group>\n                                            <Form.Group className=\"row\">\n                                                <label htmlFor=\"cameraUserName\" className=\"col-sm-3 col-form-label\">用户名</label>\n                                                <div className=\"col-sm-9\">\n                                                    <Form.Control type=\"text\" className=\"form-control\" id=\"cameraUserName\" placeholder=\"用户名\"\n                                                        value={cameraUserName} onChange={handleCameraUserNameChange} />\n                                                </div>\n                                            </Form.Group>\n                                            <Form.Group className=\"row\">\n                                                <label htmlFor=\"cameraPassword\" className=\"col-sm-3 col-form-label\">密码</label>\n                                                <div className=\"col-sm-9\">\n                                                    <Form.Control type=\"text\" className=\"form-control\" id=\"cameraPassword\" placeholder=\"密码\"\n                                                        value={cameraPassword} onChange={handleCameraPasswordChange} />\n                                                </div>\n                                            </Form.Group>\n                                        </div>\n                                }\n                                <button type=\"button\" className=\"btn btn-gradient-primary mr-2\" onClick={handleApplyVideoConfig}>添加</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-12 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">通道列表</h4>\n                                <p className=\"card-description\">已添加摄像头通道于以下列表显示\n                                </p>\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-striped\">\n                                        <thead>\n                                            <tr>\n                                                <th> 编号 </th>\n                                                <th> 名称 </th>\n                                                <th> IP </th>\n                                                <th> 录像机品牌 </th>\n                                                <th> 用户名 </th>\n                                                <th> 密码 </th>\n                                                <th> 操作 </th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                        {\n                                            cameraChannels.length > 0 ? cameraChannels.map(\n                                                (chCamera, index) => {\n                                                    return (\n                                                        <tr key={`ch-${chCamera.id}`}>\n                                                            <td className=\"py-1\">{chCamera.id}</td>\n                                                            <td> {chCamera.name} </td>\n                                                            <td> {chCamera.rtsp_ip} </td>\n                                                            <td> {chCamera.camera_vendor == CameraManufacture.HikVision ? '海康' : '大华'} </td>\n                                                            <td> {chCamera.rtsp_user} </td>\n                                                            <td> {chCamera.rtsp_password} </td>\n                                                            <td>\n                                                                <div style={{ display: 'flex', alignItems: 'center',\n                                                                justifyContent: 'start' }}>\n                                                                    <div className=\"mr-3\" onClick={() => {\n                                                                        setCurrentIndex(index);\n                                                                        showWarningDialog();\n                                                                    }} style={{ cursor: 'pointer' }}>\n                                                                        <i className=\"mdi mdi-delete icon-sm text-primary align-middle\"></i>\n                                                                    </div>\n                                                                    <div className=\"mx-3\" onClick={() => {\n                                                                        setCurrentIndex(index);\n                                                                        setEditCameraChannelName(chCamera.name);\n                                                                        setEditCameraIp(chCamera.rtsp_ip);\n                                                                        setEditCameraVendor(chCamera.camera_vendor);\n                                                                        setEditRtspChannelId(chCamera.rtsp_channel_id);\n                                                                        setEditRtspUser(chCamera.rtsp_user);\n                                                                        setEditRtspPassword(chCamera.rtsp_password);\n                                                                        showCameraChEdiDialog();\n                                                                    }} style={{ cursor: 'pointer' }}>\n                                                                        <i className=\"mdi mdi-settings icon-sm text-primary align-middle\"></i>\n                                                                    </div>\n                                                                </div>\n                                                            </td>\n                                                        </tr>\n                                                    )\n                                                }\n                                            ) : <tr><td>'没有通道可显示！'</td></tr>\n                                        }\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Modal show={warningDialogVisible} onHide={closeWarningDialog}>\n                <Modal.Header closeButton>\n                    <Modal.Title>警告</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{cameraChannels.length > 0 && currentIndex >= 0 && currentIndex < cameraChannels.length ?\n                    `即将删除通道：${cameraChannels[currentIndex].name}，是否继续` : ''}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeWarningDialog}>\n                        取消\n                    </Button>\n                    <Button variant=\"primary\" onClick={() => { deleteChannel(currentIndex); }}>\n                        确定\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Modal show={cameraChEditDialogVisible} onHide={closeCameraChEditDialog}>\n                <Modal.Header closeButton>\n                    <Modal.Title>通道编辑</Modal.Title>\n                </Modal.Header>\n                <Modal.Body style={{\n                        height: '465px',\n                        overflowY: 'scroll'\n                    }}>\n                    <div className=\"col-md-12 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <Form.Group className=\"row\">\n                                    <label className=\"col-sm-3 col-form-label\">录像机品牌</label>\n                                    <div className=\"col-sm-9\">\n                                        <select className=\"form-control\" onChange={(event) => {\n                                            setEditCameraVendor(parseInt(event.target.value));\n                                        }}>\n                                            <option value={CameraManufacture.HikVision}\n                                                selected={editCameraVendor === CameraManufacture.HikVision}>海康威视</option>\n                                            <option value={CameraManufacture.Dahua}\n                                                selected={editCameraVendor === CameraManufacture.Dahua}>大华</option>\n                                        </select>\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className=\"row\">\n                                    <label htmlFor=\"editCameraChannelName\" className=\"col-sm-3 col-form-label\">通道名称</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control type=\"text\" className=\"form-control\" id=\"editCameraChannelName\" placeholder=\"通道名称\"\n                                            value={editCameraChannelName} onChange={(event) => {\n                                                setEditCameraChannelName(event.target.value);\n                                            }} />\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className=\"row\">\n                                    <label htmlFor=\"editCameraIP\" className=\"col-sm-3 col-form-label\">摄像头IP</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control type=\"text\" className=\"form-control\" id=\"editCameraIP\" placeholder=\"摄像头IP\"\n                                            value={editCameraIp} onChange={(event) => {\n                                                setEditCameraIp(event.target.value);\n                                            }} />\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className=\"row\">\n                                    <label htmlFor=\"editCameraUserName\" className=\"col-sm-3 col-form-label\">用户名</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control type=\"text\" className=\"form-control\" id=\"editCameraUserName\" placeholder=\"用户名\"\n                                            value={editRtspUser} onChange={(event) => {\n                                                setEditRtspUser(event.target.value);\n                                            }} />\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className=\"row\">\n                                    <label htmlFor=\"editCameraPassword\" className=\"col-sm-3 col-form-label\">密码</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control type=\"text\" className=\"form-control\" id=\"editCameraPassword\" placeholder=\"密码\"\n                                            value={editRtspPassword} onChange={(event) => {\n                                                setEditRtspPassword(event.target.value);\n                                            }} />\n                                    </div>\n                                </Form.Group>\n                                <Form.Group className=\"row\">\n                                    <label htmlFor=\"editCameraChannelId\" className=\"col-sm-3 col-form-label\">通道ID</label>\n                                    <div className=\"col-sm-9\">\n                                        <Form.Control type=\"number\" className=\"form-control\" id=\"editCameraChannelId\" placeholder=\"密码\"\n                                            value={editRtspChannelId} onChange={(event) => {\n                                                setEditRtspChannelId(parseInt(event.target.value));\n                                            }} />\n                                    </div>\n                                </Form.Group>\n                            </div>\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={closeCameraChEditDialog}>\n                        取消\n                    </Button>\n                    <Button variant=\"primary\" onClick={() => { updateChannel(currentIndex); }}>\n                        确定\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}"],"sourceRoot":""}